Computer Network | Error Detection - javatpoint?HomeComputer FundamentalsComputer NetworkControl SystemJavaHTMLCSSSeleniumJavaScriptjQueryQuizProjectsInterview QCommentForumTrainingComputer NetworkTutorial Introduction Features Architecture Components Computer Network Types Topologies Transmission ModesModelsModels OSI Model TCP/IP ModelPhysical LayerDigital Transmission Transmission Media Guided Media UnGuided Media Multiplexing Multiplexing Techniques Switching Switching Modes Switching TechniquesData Link layerData Link layer Error Detection Error Correction Data Link ControlsNetwork LayerNetwork Layer Network Addressing Routing Network Layer ProtocolsRouting AlgorithmRouting Algorithm Distance Vector Link State RoutingTransport LayerTransport Layer Transport Layer ProtocolsApplication LayerApplication Layer Client & Server ModelApplication ProtocolsDNS FTP Telnet SMTP SNMP HTTPNetwork SecuritySecurity Privacy Digital Signature PGPMiscWhat is RouterInterview QuestionsNetworking Questionsnext ? ? prevError DetectionWhen data is transmitted from one device to another device, the system does not guarantee whether the data received by the device is identical to the data transmitted by another device. An Error is a situation when the message received at the receiver end is not identical to the message transmitted.Types Of ErrorsErrors can be classified into two categories:Single-Bit ErrorBurst ErrorSingle-Bit Error:The only one bit of a given data unit is changed from 1 to 0 or from 0 to 1.In the above figure, the message which is sent is corrupted as single-bit, i.e., 0 bit is changed to 1.Single-Bit Error does not appear more likely in Serial Data Transmission. For example, Sender sends the data at 10 Mbps, this means that the bit lasts only for 1 ?s and for a single-bit error to occurred, a noise must be more than 1 ?s.Single-Bit Error mainly occurs in Parallel Data Transmission. For example, if eight wires are used to send the eight bits of a byte, if one of the wire is noisy, then single-bit is corrupted per byte.Burst Error:The two or more bits are changed from 0 to 1 or from 1 to 0 is known as Burst Error.The Burst Error is determined from the first corrupted bit to the last corrupted bit.The duration of noise in Burst Error is more than the duration of noise in Single-Bit.Burst Errors are most likely to occurr in Serial Data Transmission.The number of affected bits depends on the duration of the noise and data rate.Error Detecting Techniques:The most popular Error Detecting Techniques are:Single parity checkTwo-dimensional parity checkChecksumCyclic redundancy checkSingle Parity CheckSingle Parity checking is the simple mechanism and inexpensive to detect the errors.In this technique, a redundant bit is also known as a parity bit which is appended at the end of the data unit so that the number of 1s becomes even. Therefore, the total number of transmitted bits would be 9 bits.If the number of 1s bits is odd, then parity bit 1 is appended and if the number of 1s bits is even, then parity bit 0 is appended at the end of the data unit.At the receiving end, the parity bit is calculated from the received data bits and compared with the received parity bit.This technique generates the total number of 1s even, so it is known as even-parity checking.Drawbacks Of Single Parity CheckingIt can only detect single-bit errors which are very rare.If two bits are interchanged, then it cannot detect the errors.Two-Dimensional Parity CheckPerformance can be improved by using Two-Dimensional Parity Check which organizes the data in the form of a table.Parity check bits are computed for each row, which is equivalent to the single-parity check.In Two-Dimensional Parity check, a block of bits is divided into rows, and the redundant row of bits is added to the whole block.At the receiving end, the parity bits are compared with the parity bits computed from the received data.Drawbacks Of 2D Parity CheckIf two bits in one data unit are corrupted and two bits exactly the same position in another data unit are also corrupted, then 2D Parity checker will not be able to detect the error.This technique cannot be used to detect the 4-bit errors or more in some cases.ChecksumA Checksum is an error detection technique based on the concept of redundancy.It is divided into two parts:Checksum GeneratorA Checksum is generated at the sending side. Checksum generator subdivides the data into equal segments of n bits each, and all these segments are added together by using one's complement arithmetic. The sum is complemented and appended to the original data, known as checksum field. The extended data is transmitted across the network.Suppose L is the total sum of the data segments, then the checksum would be ?LThe Sender follows the given steps:
  The block unit is divided into k sections, and each of n bits.
  All the k sections are added together by using one's complement to get the sum.
  The sum is complemented and it becomes the checksum field.
  The original data and checksum field are sent across the network.Checksum CheckerA Checksum is verified at the receiving side. The receiver subdivides the incoming data into equal segments of n bits each, and all these segments are added together, and then this sum is complemented. If the complement of the sum is zero, then the data is accepted otherwise data is rejected.The Receiver follows the given steps:
  The block unit is divided into k sections and each of n bits.
  All the k sections are added together by using one's complement algorithm to get the sum.
  The sum is complemented.
  If the result of the sum is zero, then the data is accepted otherwise the data is discarded.Cyclic Redundancy Check (CRC)CRC is a redundancy error technique used to determine the error.Following are the steps used in CRC for error detection:In CRC technique, a string of n 0s is appended to the data unit, and this n number is less than the number of bits in a predetermined number, known as division which is n+1 bits.Secondly, the newly extended data is divided by a divisor using a process is known as binary division. The remainder generated from this division is known as CRC remainder.Thirdly, the CRC remainder replaces the appended 0s at the end of the original data. This newly generated unit is sent to the receiver.The receiver receives the data followed by the CRC remainder. The receiver will treat this whole unit as a single unit, and it is divided by the same divisor that was used to find the CRC remainder.If the resultant of this division is zero which means that it has no error, and the data is accepted.If the resultant of this division is not zero which means that the data consists of an error. Therefore, the data is discarded.Let's understand this concept through an example:Suppose the original data is 11100 and divisor is 1001.CRC GeneratorA CRC generator uses a modulo-2 division. Firstly, three zeroes are appended at the end of the data as the length of the divisor is 4 and we know that the length of the string 0s to be appended is always one less than the length of the divisor.Now, the string becomes 11100000, and the resultant string is divided by the divisor 1001.The remainder generated from the binary division is known as CRC remainder. The generated value of the CRC remainder is 111.CRC remainder replaces the appended string of 0s at the end of the data unit, and the final string would be 11100111 which is sent across the network.CRC CheckerThe functionality of the CRC checker is similar to the CRC generator.When the string 11100111 is received at the receiving end, then CRC checker performs the modulo-2 division.A string is divided by the same divisor, i.e., 1001.In this case, CRC checker generates the remainder of zero. Therefore, the data is accepted.Next Topic#? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.