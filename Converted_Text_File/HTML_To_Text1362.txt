CodeIgniter Hooks - javatpoint?HomeCJavaPHPMySQLWordPressCodeIgniterHTMLCSSBootstrapJavaScriptjQueryjQuery UIXMLAjaxSQLQuizProjectsInterview QCommentForumTrainingCodeIgniter TutorialCodeIgniter Tutorial What is CodeIgniter CodeIgniter License CodeIgniter versions CodeIgniter Feature CodeIgniter Installation CodeIgniter File System CodeIgniter Architecture CodeIgniter MVC Models Views ControllerCodeIgniter ExampleCodeIgniter First Example CodeIgniter URL CodeIgniter Create a site CodeIgniter Methods CodeIgniter Helper CodeIgniter Library CodeIgniter URL Routing CodeIgniter Hooks CI Passing Parameters CodeIgniter DriverCodeIgniter DatabaseCodeIgniter Database CI Database Insert CI Database select CI Login Form CI Database Login FormCodeIgniter SecurityCI Security Class CI CSRFCodeIgniter InterviewCI Interview Questionsnext ? ? prevCodeIgniter HooksIn CodeIgniter, hooks are events which can be called before and after the execution of a program. It allows executing a script with specific path in the CodeIgniter execution process without modifying the core files. For example, it can be used where you need to check whether a user is logged in or not before the execution of controller. Using hook will save your time in writing code multiple times.There are two hook files in CodeIgniter. One is application/config/hooks.php folder and other is application /hooks folder.In other language, if you want to run a code every time after controller constructor is loaded, you can specify that script path in hooks.Enabling HooksTo enable Hook, go to application/config/config.php file and set it TRUE as shown below.$config['enable_hooks'] = TRUE;Defining a HookA hook can be defined in the application/config/hooks.php file. Each hook is defined as an array consisting of the following terms.$hook['pre_controller'] = array(
			'class' => 'Classname',
			'function' => 'functionname',
			'filename' => 'filename.php',
			'filepath' => 'hooks',
			'params' => array('element1', 'element2', 'element3')
			);class - Here, you have to mention the name of your class defined in the hooks.php file. If you are using procedural function instead of a class, leave it blank.function - Mention the function name you are calling.filename - The file name created in application/hooks folder and containing class and function name mentioned above.filepath - Here you have to mention the name of the directory which contains your script. Your script must be located inside the application folder. If your script is located in application/hooks folder, then your path will be simply hooks. But if your script is located in application/hooks/office folder, then your path will be hooks/office.params - It includes the parameters which you want to pass in your script and it's optional.Multiple calls to the same HookYou can use array multi-dimensional to use the same hook point with more than one script.$hook['pre_controller'][] = array(
					'class' => 'Classname1',
					'function' => 'functionname1',
					'filename' => 'filename1.php',
					'filepath' => 'hooks',
					'params' => array('element1', 'element2', 'element3')
					);

 $hook['pre_controller'][] = array(
					'class' => 'Classname2',
					'function' => 'functionname2',
					'filename' => 'filename2.php',
					'filepath' => 'hooks',
					'params' => array('element4', 'element5', 'element6')
					);Bracket [] enables you to have same hook point with multiple scripts. Your execution order will be same as the array defined.Hook PointsThe list of hook points is shown below.pre_systemIt is called much before the system execution. Only benchmark and hook class have been loaded at this point.pre_controllerIt is called immediately prior to your controller being called. At this point all the classes, security checks and routing have been done.post_controller_constructoIt is called immediately after your controller is started, but before any method call.post_controllerIt is called immediately after your controller is completely executed.display_overrideIt is used to send the final page at the end of file execution.cache_overrideIt enables you to call your own function in the output class.post_systemIt is called after the final page is sent to the browser at the end of the system execution.Hook Example1) First of all enable the hook in your CodeIgniter folder as mentioned above.2) Create a Controller file example.php in application/controller folder?php
defined('BASEPATH') OR exit('No direct script access allowed');
class Example extends CI_Controller {
public function index()
	{
		echo "CodeIgniter Tutorial";
}
}On running the above program with URL,http://localhost/hooks/index.php/example, following output will appear.3) Create a hooks file exm.php in application/hooks folder.?php
defined('BASEPATH') OR exit('No direct script access allowed');
class Exm extends CI_Controller {
public function tut()
	{
		echo "Welcome to JavaTpoint. This is ";
	}
}
?>4) Now you have to define your hook in the application/config/hooks folder.?php
defined('BASEPATH') OR exit('No direct script access allowed');

$hook['pre_controller'] = array(
		'class' => 'Exm',
		'function' => 'tut',
		'filename' => 'exm.php',
		'filepath' => 'hooks',
		);
?>5) Now again run your program with the same URL and see the result.Next TopicPassing Parameters in CodeIgniter? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.