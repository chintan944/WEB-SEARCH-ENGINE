COA | Associative Memory - javatpoint?HomeCOAComputer FundamentalsComputer NetworkControl SystemJavaHTMLCSSSeleniumJavaScriptjQueryQuizProjectsInterview QCommentForumTrainingCOA TutorialCOA Tutorial CA VS CO Evolution of Computing Devices Functional units of Digital System Basic Operational ConceptsBasic CO and DesignGeneral System Architecture Store Program Control Concept Flynn's Classification of Computers Computer RegistersComputer InstructionsComputer Instructions Design of Control Unit Instruction Cycle Control Logic GatesDigital Logic CircuitsDigital Computers Logic Gates Boolean Algebra Examples of Boolean algebra simplification Laws of Boolean Algebra Simplification using Boolean AlgebraMap SimplificationMap Simplification ExamplesCombinational CircuitsCombinational Circuits Half - Adder Full - AdderFlip - FlopsS-R Flip-Flop D Flip-Flop JK Flip-Flop T Flip-FlopDigital ComponentsIntegrated Circuits Decoders Encoders Multiplexers De - multiplexers Registers Shift RegistersRegister TransferRegister Transfer Language Register Transfer Bus and Memory TransferMicro-OperationsArithmetic Micro-Operations Binary Adder Binary Adder-Subtractor Binary IncrementerMemory OrganizationMemory Hierarchy Main Memory Auxiliary Memory Associative Memory Cache MemoryPipelineParallel Processing Pipelining Arithmetic Pipeline Instruction Pipelinenext ? ? prevAssociative MemoryAn associative memory can be considered as a memory unit whose stored data can be identified for access by the content of the data itself rather than by an address or memory location.Associative memory is often referred to as Content Addressable Memory (CAM).When a write operation is performed on associative memory, no address or memory location is given to the word. The memory itself is capable of finding an empty unused location to store the word.On the other hand, when the word is to be read from an associative memory, the content of the word, or part of the word, is specified. The words which match the specified content are located by the memory and are marked for reading.The following diagram shows the block representation of an Associative memory.From the block diagram, we can say that an associative memory consists of a memory array and logic for 'm' words with 'n' bits per word.The functional registers like the argument register A and key register K each have n bits, one for each bit of a word. The match register M consists of m bits, one for each memory word.The words which are kept in the memory are compared in parallel with the content of the argument register.The key register (K) provides a mask for choosing a particular field or key in the argument word. If the key register contains a binary value of all 1's, then the entire argument is compared with each memory word. Otherwise, only those bits in the argument that have 1's in their corresponding position of the key register are compared. Thus, the key provides a mask for identifying a piece of information which specifies how the reference to memory is made.The following diagram can represent the relation between the memory array and the external registers in an associative memory.The cells present inside the memory array are marked by the letter C with two subscripts. The first subscript gives the word number and the second specifies the bit position in the word. For instance, the cell Cij is the cell for bit j in word i.A bit Aj in the argument register is compared with all the bits in column j of the array provided that Kj = 1. This process is done for all columns j = 1, 2, 3......, n.If a match occurs between all the unmasked bits of the argument and the bits in word i, the corresponding bit Mi in the match register is set to 1. If one or more unmasked bits of the argument and the word do not match, Mi is cleared to 0.Next TopicCache Memory? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.