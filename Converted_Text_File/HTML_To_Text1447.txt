Computer Graphics DDA Algorithm - javatpoint?HomeComputer FundamentalsComputer GraphicsBiometricsComputer NetworkJavaHTMLCSSSeleniumjQueryProjectsInterview QCommentForumTrainingComputer GraphicsComputer Graphics Tutorial Application of Computer Graphics Interactive and Passive GraphicsGraphic SystemsDisplay Processor Cathode Ray Tube (CRT) Random Scan vs Raster Scan Color CRT Monitors Direct View Storage Tubes Flat Panel DisplayInput-Output DevicesInput Devices Trackball Light Pen Image Scanner Output Devices PlottersScan Conversion a lineScan Conversion Definition Scan Converting a Point Scan Converting a Straight Line DDA Algorithm Bresenham's Line AlgorithmScan Conversion CircleDefining a Circle Defining a Circle using Polynomial Method Defining a Circle using Polar Coordinates Method Bresenham's Circle Algorithm Midpoint Circle AlgorithmScan Converting EllipseScan converting a Ellipse Polynomial Method Trignometric Method Midpoint Ellipse AlgorithmFilled Area PrimitivesBoundary Fill Algorithm Flood Fill Algorithm Scan Line Polygon Fill Algorithm2D TransformationsIntroduction of Transformation Translation Scaling Rotation Reflection Shearing Matrix Representation Homogeneous Coordinates Composite Transformation Pivot Point Rotation2D-ViewingWindow Window to Viewport Co-ordinate Transformation Zooming PanningClipping TechniquesClipping Point Clipping Line Clipping Midpoint Subdivision Algorithm Text Clipping Polygon Sutherland-Hodgeman Polygon Clipping Weiler-Atherton Polygon ClippingPointing & PositioningPointing & Positioning Techniques Elastic or Rubber Band Techniques DraggingShadingIntroduction of Shading Constant Intensity Shading Gouraud shading Phong ShadingAnimationAnimation Application Areas of Animation Animation Functions3D Computer GraphicsThree Dimensional Graphics Three Dimensional Transformations Scaling Rotation Rotation about Arbitrary Axis Inverse Transformations Reflection ShearingHidden SurfacesHidden Surface Removal Back Face Removal Algorithm Z-Buffer Algorithm Painter's Algorithm Scan Line Algorithm Subdivision Algorithm 3D Modelling SystemProjectionProjection Perspective Projection Parallel ProjectionProgramsComputer Graphics Programsnext ? ? prevDDA AlgorithmDDA stands for Digital Differential Analyzer. It is an incremental method of scan conversion of line. In this method calculation is performed at each step but by using results of previous steps.Suppose at step i, the pixels is (xi,yi)The line of equation for step i              yi=mxi+b......................equation 1Next value will be              yi+1=mxi+1+b.................equation 2              m =              yi+1-yi=?y.......................equation 3              yi+1-xi=?x......................equation 4              yi+1=yi+?y              ?y=m?x              yi+1=yi+m?x              ?x=?y/m              xi+1=xi+?x              xi+1=xi+?y/mCase1: When |M|1 then (assume that x12)              x= x1,y=y1 set ?x=1              yi+1=y1+m,     x=x+1              Until x = x2Case2: When |M|1 then (assume that y12)              x= x1,y=y1 set ?y=1              xi+1=,     y=y+1              Until y ? y2Advantage:It is a faster method than method of using direct use of line equation.This method does not use multiplication theorem.It allows us to detect the change in the value of x and y ,so plotting of same point twice is not possible.This method gives overflow indication when a point is repositioned.It is an easy method because each step involves just two additions.Disadvantage:It involves floating point additions rounding off is done. Accumulations of round off error cause accumulation of error.Rounding off operations and floating point operations consumes a lot of time.It is more suitable for generating line using the software. But it is less suited for hardware implementation.DDA Algorithm:Step1: Start AlgorithmStep2: Declare x1,y1,x2,y2,dx,dy,x,y as integer variables.Step3: Enter value of x1,y1,x2,y2.Step4: Calculate dx = x2-x1Step5: Calculate dy = y2-y1Step6: If ABS (dx) > ABS (dy)            Then step = abs (dx)            ElseStep7: xinc=dx/step            yinc=dy/step            assign x = x1            assign y = y1Step8: Set pixel (x, y)Step9: x = x + xinc            y = y + yinc            Set pixels (Round (x), Round (y))Step10: Repeat step 9 until x = x2Step11: End AlgorithmExample: If a line is drawn from (2, 3) to (6, 15) with use of DDA. How many points will needed to generate such line?Solution: P1 (2,3)       P11 (6,15)                x1=2                y1=3                x2= 6                y2=15                dx = 6 - 2 = 4                dy = 15 - 3 = 12                m = For calculating next value of x takes x = x + Program to implement DDA Line Drawing Algorithm:#include
#include
#include
void main()
{
	intgd = DETECT ,gm, i;
	float x, y,dx,dy,steps;
	int x0, x1, y0, y1;
	initgraph(&gd, &gm, "C:\\TC\\BGI");
	setbkcolor(WHITE);
	x0 = 100 , y0 = 200, x1 = 500, y1 = 300;
	dx = (float)(x1 - x0);
	dy = (float)(y1 - y0);
	if(dx>=dy)
           {
		steps = dx;
	}
	else
           {
		steps = dy;
	}
	dx = dx/steps;
	dy = dy/steps;
	x = x0;
	y = y0;
	i = 1;
	while(i= steps)
	{
		putpixel(x, y, RED);
		x += dx;
		y += dy;
		i=i+1;
	}
	getch();
	closegraph();
}Output:Symmetrical DDA:The Digital Differential Analyzer (DDA) generates lines from their differential equations. The equation of a straight line isThe DDA works on the principle that we simultaneously increment x and y by small steps proportional to the first derivatives of x and y. In this case of a straight line, the first derivatives are constant and are proportional to ?x and ?y . Therefore, we could generate a line by incrementing x and y by ? ?x and ? ?y, where ? is some small quantity. There are two ways to generate points1. By rounding to the nearest integer after each incremental step, after rounding we display dots at the resultant x and y.2. An alternative to rounding the use of arithmetic overflow: x and y are kept in registers that have two parts, integer and fractional. The incrementing values, which are both less than unity, are repeatedly added to the fractional parts and whenever the results overflows, the corresponding integer part is incremented. The integer parts of the x and y registers are used in plotting the line. In the case of the symmetrical DDA, we choose ?=2-n,where 2n-1?max (|?x|,|?y|)2?A line drawn with the symmetrical DDA is shown in fig:Example: If a line is drawn from (0, 0) to (10, 5) with a symmetrical DDA1. How many iterations are performed?2. How many different points will be generated?Solutions: Given: P1 (0,0) P2 (10,5)                x1=0                y1=0                x2=10                y2=5                dx = 10 - 0 = 10               dy = 5 - 0 = 0                P1 (0,0) will be considered starting pointsP3 (1,0.5)                 point not plottedP4 (2, 1)                 point plottedP5 (3, 1.5)                 point not plottedP6 (4,2)                 point plottedP7 (5,2.5)                 point not plottedP8 (6,3)                 point plottedP9 (7,3.5)                 point not plottedP10 (8, 4)                 point plottedP11 (9,4.5)                 point not plottedP12 (10,5)                 point plottedFollowing Figure show line plotted using these points.Next TopicBresenham's Line Algorithm? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.