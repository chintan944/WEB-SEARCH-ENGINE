Java Autoboxing and Unboxing - javatpoint?HomeJavaCC++C#ServletJSPEJBStruts2MailHibernateSpringAndroidDesign PQuizProjectsInterview QCommentForumTrainingBasics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBCJava New FeaturesJava New FeaturesJava 9 FeaturesJava 9 Features Interface Private Methods Try-With Resources Anonymous Classes SafeVarargs Annotation Collection Factory Methods Process API Improvement Version-String Scheme JShell (REPL) Module System Control Panel Stream API Improvement Underscore KeywordJava 8 FeaturesJava 8 Features Lambda Expressions Method References Functional Interfaces Stream API Stream Filter Base64 Encode Decode Default Methods forEach() method Collectors class StringJoiner class Optional class JavaScript Nashorn Parallel Array Sort Type Inference Parameter Reflection Type Annotations JDBC ImprovementsJava 7 FeaturesBinary Literals Switch with String Java 7 Multi Catch Try with Resources Type Inference Numeric Literals Java 7 JDBCJava 4/5 FeaturesJava Assertion Java For-each Loop Java Varargs Java Static Import Java Autoboxing Java Enums Java Annotations Java GenericsRMI Internationalizationnext>> <<prevAutoboxing and Unboxing:The automatic conversion of primitive data types into its equivalent Wrapper type is known as boxing and opposite operation is known as unboxing. This is the new feature of Java5. So java programmer doesn't need to write the conversion code.Advantage of Autoboxing and Unboxing:No need of conversion between primitives and Wrappers manually so less coding is required.Simple Example of Autoboxing in java:  
class BoxingExample1{
  public static void main(String args[]){
	int a=50;
        Integer a2=new Integer(a);//Boxing

        Integer a3=5;//Boxing
        
        System.out.println(a2+" "+a3);
 } 
}
    Test it NowOutput:50 5download this exampleSimple Example of Unboxing in java:The automatic conversion of wrapper class type into corresponding primitive type, is known as Unboxing. Let's see the example of unboxing:  
class UnboxingExample1{
  public static void main(String args[]){
	Integer i=new Integer(50);
        int a=i;
        
        System.out.println(a);
 } 
}
    Test it NowOutput:50Autoboxing and Unboxing with comparison operatorsAutoboxing can be performed with comparison operators. Let's see the example of boxing with comparison operator:  
class UnboxingExample2{
  public static void main(String args[]){
	Integer i=new Integer(50);
        
        if(i100){            //unboxing internally
        System.out.println(i);
        }
 } 
}
    Test it NowOutput:50Autoboxing and Unboxing with method overloadingIn method overloading, boxing and unboxing can be performed. There are some rules for method overloading with boxing:Widening beats boxingWidening beats varargsBoxing beats varargs1) Example of Autoboxing where widening beats boxingIf there is possibility of widening and boxing, widening beats boxing.  
class Boxing1{
  static void m(int i){System.out.println("int");}
  static void m(Integer i){System.out.println("Integer");}

  public static void main(String args[]){
   short s=30;
   m(s);
 } 
}
    Test it NowOutput:int2) Example of Autoboxing where widening beats varargsIf there is possibility of widening and varargs, widening beats var-args.  
class Boxing2{
  static void m(int i, int i2){System.out.println("int int");}
  static void m(Integer... i){System.out.println("Integer...");}

  public static void main(String args[]){
   short s1=30,s2=40;
   m(s1,s2);
 } 
}
    Test it NowOutput:int int3) Example of Autoboxing where boxing beats varargsLet's see the program where boxing beats variable argument:  
class Boxing3{
  static void m(Integer i){System.out.println("Integer");}
  static void m(Integer... i){System.out.println("Integer...");}

  public static void main(String args[]){
   int a=30;
   m(a);
 } 
}
    Test it NowOutput:IntegerMethod overloading with Widening and BoxingWidening and Boxing can't be performed as given below:  
class Boxing4{
  static void m(Long l){System.out.println("Long");}

  public static void main(String args[]){
   int a=30;
   m(a);
 } 
}
    Test it NowOutput:Compile Time ErrorNext TopicEnum In Java<<prev next>>Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.