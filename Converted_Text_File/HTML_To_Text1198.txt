Cassandra Architecture - javatpoint?HomeCassandraSQLPL/SQLCJavaPHPHTMLCSSJavaScriptjQueryjQuery UIXMLJSONAjaxPythonQuizProjectsInterview QCommentForumTrainingCassandra TutorialCassandra Tutorial Cassandra History Cassandra Features Cassandra Architecture Relational vs NoSQL Cassandra Use Cases Cassandra Data Types Cassandra Data Model Cassandra vs HBase Cassandra vs RDBMS Cassandra Installation Cassandra CqlshCassandra KeyspaceCreate Keyspace Alter Keyspace Drop KeyspaceCassandra Table IndexCreate Table Alter Table Drop Table Truncate Table Create Index Drop Index Cassandra BatchCassandra Query (CQL)CQL Create Data CQL Read Data CQL Update Data CQL Delete DataCassandra CollectionsCassandra CollectiionsCassandra InterviewCassandra Interviewnext ? ? prevCassandra ArchitectureCassandra was designed to handle big data workloads across multiple nodes without a single point of failure. It has a peer-to-peer distributed system across its nodes, and data is distributed among all the nodes in a cluster.In Cassandra, each node is independent and at the same time interconnected to other nodes. All the nodes in a cluster play the same role.Every node in a cluster can accept read and write requests, regardless of where the data is actually located in the cluster.In the case of failure of one node, Read/Write requests can be served from other nodes in the network.Data Replication in CassandraIn Cassandra, nodes in a cluster act as replicas for a given piece of data. If some of the nodes are responded with an out-of-date value, Cassandra will return the most recent value to the client. After returning the most recent value, Cassandra performs a read repair in the background to update the stale values.See the following image to understand the schematic view of how Cassandra uses data replication among the nodes in a cluster to ensure no single point of failure.Components of CassandraThe main components of Cassandra are:Node: A Cassandra node is a place where data is stored.Data center: Data center is a collection of related nodes.Cluster: A cluster is a component which contains one or more data centers.Commit log: In Cassandra, the commit log is a crash-recovery mechanism. Every write operation is written to the commit log.Mem-table: A mem-table is a memory-resident data structure. After commit log, the data will be written to the mem-table. Sometimes, for a single-column family, there will be multiple mem-tables.SSTable: It is a disk file to which the data is flushed from the mem-table when its contents reach a threshold value.Bloom filter: These are nothing but quick, nondeterministic, algorithms for testing whether an element is a member of a set. It is a special kind of cache. Bloom filters are accessed after every query.Cassandra Query LanguageCassandra Query Language (CQL) is used to access Cassandra through its nodes. CQL treats the database (Keyspace) as a container of tables. Programmers use cqlsh: a prompt to work with CQL or separate application language drivers.The client can approach any of the nodes for their read-write operations. That node (coordinator) plays a proxy between the client and the nodes holding the data.Write OperationsEvery write activity of nodes is captured by the commit logs written in the nodes. Later the data will be captured and stored in the mem-table. Whenever the mem-table is full, data will be written into the SStable data file. All writes are automatically partitioned and replicated throughout the cluster. Cassandra periodically consolidates the SSTables, discarding unnecessary data.Read OperationsIn Read operations, Cassandra gets values from the mem-table and checks the bloom filter to find the appropriate SSTable which contains the required data.There are three types of read request that is sent to replicas by coordinators.Direct requestDigest requestRead repair requestThe coordinator sends direct request to one of the replicas. After that, the coordinator sends the digest request to the number of replicas specified by the consistency level and checks if the returned data is an updated data.After that, the coordinator sends digest request to all the remaining replicas. If any node gives out of date value, a background read repair request will update that data. This process is called read repair mechanism.Next TopicRelational vs nosql database? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.