Apache Kafka Tutorial - javatpoint?HomeKafkaScalaJavaC++C#SQLAndroidHTMLCSSXMLJavaScriptAjaxPythonQuizProjectsInterview QCommentForumTrainingKafka TutorialKafka Tutorial Kafka Topics Topic Replication Kafka Producer Consumer & Consumer Groups Kafka Use Cases Kafka Applications Advantage & Disadvantage Kafka Multiple Clusters Kafka ArchitectureKafka InstallationKafka Installation Install Kafka On Linux Install Kafka on macOSKafka CLIKafka Topics CLI Sending data to Kafka Kafka Console Consumer Kafka Consumer GroupKafka ProgrammingKafka with Java Installing IntelliJ IDEA Creating Kafka Producer Kafka Producer Callbacks Creating Kafka ConsumerReal Time ExampleReal Time Example Creating Twitter ProducerKafka MonitoringKafka MonitoringKafka ConnectKafka ConnectKafka StreamsKafka Stream Processing Key concepts of Stream ProcessingMiscellaneousKafka Message Compression Kafka Security Apache Kafka vs RabbitMQ Apache Kafka vs Apache Storm Kafka Streams vs Spark Streamingnext ?Apache Kafka TutorialApache Kafka Tutorial provides the basic and advanced concepts of Apache Kafka. This tutorial is designed for both beginners and professionals.Apache Kafka is an open-source stream-processing software platform which is used to handle the real-time data storage. It works as a broker between two parties, i.e., a sender and a receiver. It can handle about trillions of data events in a day.Apache Kafka tutorial journey will cover all the concepts from its architecture to its core concepts.What is Apache KafkaApache Kafka is a software platform which is based on a distributed streaming process. It is a publish-subscribe messaging system which let exchanging of data between applications, servers, and processors as well. Apache Kafka was originally developed by LinkedIn, and later it was donated to the Apache Software Foundation. Currently, it is maintained by Confluent under Apache Software Foundation. Apache Kafka has resolved the lethargic trouble of data communication between a sender and a receiver.What is a messaging systemA messaging system is a simple exchange of messages between two or more persons, devices, etc. A publish-subscribe messaging system allows a sender to send/write the message and a receiver to read that message. In Apache Kafka, a sender is known as a producer who publishes messages, and a receiver is known as a consumer who consumes that message by subscribing it.What is Streaming processA streaming process is the processing of data in parallelly connected systems. This process allows different applications to limit the parallel execution of the data, where one record executes without waiting for the output of the previous record. Therefore, a distributed streaming platform enables the user to simplify the task of the streaming process and parallel execution. Therefore, a streaming platform in Kafka has the following key capabilities:As soon as the streams of records occur, it processes it.It works similar to an enterprise messaging system where it publishes and subscribes streams of records.It stores the streams of records in a fault-tolerant durable way.To learn and understand Apache Kafka, the aspirants should know the following four core APIs :Producer API: This API allows/permits an application to publish streams of records to one or more topics. (discussed in later section)Consumer API: This API allows an application to subscribe one or more topics and process the stream of records produced to them.Streams API: This API allows an application to effectively transform the input streams to the output streams. It permits an application to act as a stream processor which consumes an input stream from one or more topics, and produce an output stream to one or more output topics.Connector API: This API executes the reusable producer and consumer APIs with the existing data systems or applications.Why Apache KafkaApache Kafka is a software platform that has the following reasons which best describes the need of Apache Kafka.Apache Kafka is capable of handling millions of data or messages per second.Apache Kafka works as a mediator between the source system and the target system. Thus, the source system (producer) data is sent to the Apache Kafka, where it decouples the data, and the target system (consumer) consumes the data from Kafka.Apache Kafka is having extremely high performance, i.e., it has really low latency value less than 10ms which proves it as a well-versed software.Apache Kafka has a resilient architecture which has resolved unusual complications in data sharing.Organizations such as NETFLIX, UBER, Walmart, etc. and over thousands of such firms make use of Apache Kafka.Apache Kafka is able to maintain the fault-tolerance. Fault-tolerance means that sometimes a consumer successfully consumes the message that was delivered by the producer. But, the consumer fails to process the message back due to backend database failure, or due to presence of a bug in the consumer code. In such a situation, the consumer is unable to consume the message again. Consequently, Apache Kafka has resolved the problem by reprocessing the data.Learning Kafka is a good source of income. So, those who wish to raise their income in future in IT sector can learn.PrerequisiteThe aspirants should have basic knowledge of Java programming, and some knowledge of Linux commands.AudienceThis Apache Kafka journey is designed for beginners, developers, and people who wish to learn new things.ProblemsWe assure that you will not find any problem in this Apache KafkaTutorial. But if there is any mistake, please post the problem in a contact form.Next TopicKafka Topicsnext ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.