C++ Bidirectional Iterator - javatpoint?HomeCC++C#JavaPHPHTMLCSSJavaScriptjQueryXMLJSONAjaxNode.jsSQLQuizProjectsInterview QCommentForumTrainingC++ TutorialC++ Tutorial C vs C++ C++ History C++ Features C++ Installation C++ Program C++ cout, cin, endl C++ Variable C++ Data types C++ Keywords C++ Operators C++ Identifiers C++ ExpressionC++ Control StatementC++ if-else C++ switch C++ For Loop C++ While Loop C++ Do-While Loop C++ Break Statement C++ Continue Statement C++ Goto Statement C++ CommentsC++ FunctionsC++ Functions Call by value & reference C++ Recursion C++ Storage ClassesC++ ArraysC++ Arrays C++ Array to Function Multidimensional ArraysC++ PointersC++ Pointers C++ References Reference vs Pointer C++ Memory ManagementC++ Object ClassC++ OOPs Concepts C++ Object Class C++ Constructor C++ Copy Constructor C++ Destructor C++ this Pointer C++ static C++ Structs C++ Enumeration C++ Friend Function C++ Math FunctionsC++ InheritanceC++ Inheritance C++ AggregationC++ PolymorphismC++ Polymorphism C++ Overloading C++ Overriding C++ Virtual FunctionC++ AbstractionC++ Interfaces C++ Data AbstractionC++ NamespacesC++ NamespacesC++ StringsC++ StringsC++ ExceptionsC++ Exception Handling C++ try/catch C++ User-DefinedC++ TemplatesC++ TemplatesSignal HandlingC++ Signal HandlingC++ File & StreamC++ File & Stream C++ getline()C++ MiscC++ vs C# C++ int to stringC++ STL TutorialC++ STL Components C++ Vector C++ Deque C++ List C++ Set C++ Stack C++ Queue C++ Priority Queue C++ Map C++ Multimap C++ Map C++ Bitset C++ AlgorithmC++ IteratorsC++ Iterators C++ Bidirectional Iterator C++ Forward Iterator C++ Input Iterator C++ Output IteratorC++ ProgramsC++Programs Fibonacci Series Prime Number Palindrome Number Factorial Armstrong Number Sum of digits Reverse Number Swap Number Matrix Multiplication Decimal to Binary Number in Characters Alphabet Triangle Number Triangle Fibonacci TriangleInterview QuestionInterview Questionnext ? ? prevC++ Bidirectional iteratorA Bidirectional iterator supports all the features of a forward iterator, and it also supports the two decrement operators (prefix and postfix).Bidirectional iterators are the iterators used to access the elements in both the directions, i.e., towards the end and towards the beginning.A random access iterator is also a valid bidirectional iterator.Many containers implement the bidirectional iterator such as list, set, multiset, map, multimap.C++ provides two non-const iterators that move in both the directions are iterator and reverse iterator.C++ Bidirectional iterator has the same features like the forward iterator, with the only difference is that the bidirectional iterator can also be decremented.Properties Of Bidirectional IteratorSuppose x and y are the two iterators:PropertyExpressionsA Bidirectional iterator is a default-constructible, copy-assignable and destructible.A x;A y(x);y=x;It can be compared by using equality or inequality operator.x==yx!=yIt can be dereferenced means we can retrieve the value by using a dereference operator(*).*xA mutable iterator can be dereferenced as an lvalue.*x = tA Bidirectional iterator can be incremented.x++++xA Bidirectional iterator can also be decremented.x----xIn the above table, 'A' is of bidirectional type, x and y are the objects of an iterator type, and 't' is an object pointed by the iterator.Let's see a simple example:#include <iostream>
#include<iterator>
#include<vector>
using namespace std;
int main()
{
   vector<int> v{1,2,3,4,5};                       // vector declaration
   vector<int> ::iterator itr;                        // iterator declaration
   vector<int> :: reverse_iterator ritr;         // reverse iterator declaration
   for(itr = v.begin();itr!=v.end();itr++)
   {
       cout<<*itr<<" ";
   }
   cout<<'\n';
   for(ritr = v.rbegin();ritr!= v.rend();ritr++)
   {
       cout<<*ritr<<" ";
   }
    return 0;
}Output:1 2 3 4 5
5 4 3 2 1Features of the Bidirectional iteratorEquality/Inequality operator: A bidirectional iterator can be compared by using an equality or inequality operator. The two iterators are equal only when both the iterators point to the same position.Suppose 'A' and 'B' are the two iterators:A==B;
A!=B;Dereferencing: A bidirectional iterator can also be dereferenced both as an lvalue and rvalue.Suppose 'A' is an iterator and 't' is an integer variable:*A = t;
  t = *AIncrementable: A bidirectional iterator can be incremented by using an operator++() function.A++;
++A;Decrementable: A bidirectional iterator can also be decremented by using an Operator --() function.A--;
--A;Limitations Of Bidirectional Iterator:Relational operator: An equality or inequality operator can be used with the bidirectional iterator, but the other iterators cannot be applied on the bidirectional iterator.Suppose 'A' and 'B' are the two iterators:A==B;           // valid
A<=B;           // invalidArithmetic operator: An arithmetic operator cannot be used with the bidirectional iterator as it accesses the data sequentially.A+2;              // invalid
A+1;              // invalidOffset dereference operator: A Bidirectional iterator does not support the offset dereference operator or subscript operator [] for the random access of an element.Next Topic? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.