C++ multiset begin() function - javatpoint?HomeCC++C#JavaPHPHTMLCSSJavaScriptjQueryXMLJSONAjaxNode.jsSQLQuizProjectsInterview QCommentForumTrainingC++ multisetC++ multiset constructor destructor begin() end() operator= rbegin() rend() cbegin() cend() max_size() size() crbegin() crend() empty() insert() clear() emplace() erase() swap() emplace_hint() find() key_comp() value_comp() count() equal_range() lower_bound() upper_bound() get_allocator() operator== operator!= operator< operator<= operator> operator>= swap()next ? ? prevC++ multiset begin()C++ multiset begin() function is used to return an iterator referring to the first element of the multiset container.Syntax      iterator begin();                            //until C++ 11

const_iterator begin() const;                //until C++ 11

      iterator begin() noexcept;              //since C++ 11

const_iterator begin() const noexcept;  //since C++ 11ParameterNoneReturn valueIt returns an iterator pointing to the first element of the multiset.ComplexityConstant.Iterator validityNo changes.Data RacesThe container is accessed. Neither the constant nor the non-constant versions modify the container.Exception SafetyThis function never throws exceptions.Example 1Let's see the simple example for begin() function:#include <iostream>
#include <set>

using namespace std;

int main ()
{
  multiset<string> mymultiset= {"Java", "C++", "SQL","C++"};

  // show content:
  cout<<"Contents of mymultiset are: "<<endl;
  for (multiset<string>::iterator it=mymultiset.begin(); it!=mymultiset.end(); ++it)
    cout << *it<< '\n';

  return 0;
}Output:Contents of mymultiset are: 
C++
C++
Java
SQLIn the above example, begin() function is used to return an iterator pointing to the first element in the mymultiset multiset.Example 2Let's see a simple example:#include <iostream>
#include <set>

using namespace std;

int main()
{
  multiset<int> c;
  c.insert(5);
  c.insert(2);
  c.insert(4);
  c.insert(2);
  c.insert(0);
  c.insert(5);

  multiset<int>::iterator i = c.begin();
  while (i != c.end())
  cout << *i++ << " ";
  cout << endl;
}Output:0 2 2 4 5 5Example 3Let's see a simple example to iterate over the multiset using while loop:#include <iostream>
#include <set>
#include <string>

int main()
{
    using namespace std;
 
      multiset<string> mymultiset = { "Nikita","Deep","Priya","Suman","Aman","Nikita" };

 cout<<"Elements of mymultiset are: "<<endl;
    multiset<string>::const_iterator it; // declare an iterator

    it = mymultiset.begin(); // assign it to the start of the multiset

    while (it != mymultiset.end()) // while it hasn't reach the end
    {
cout << *it << "\n"; 

// print the value of the element it points to

++it; // and iterate to the next element
    }
 
    cout << endl;
}Output:Elements of mymultiset are: 
Aman
Deep
Nikita
Nikita
Priya
SumanIn the above example, begin() function is used to return an iterator pointing to the first element in the mymultiset multiset.Example 4Let's see a simple example:#include <set>  
#include <iostream>  
  
int main( )  
{  
   using namespace std;  
   multiset <int> s1;  
   multiset <int>::iterator s1_Iter;    
  
   s1.insert( 1 );  
   s1.insert( 2 );  
   s1.insert( 3 ); 
   s1.insert( 3 );
  
   s1_Iter = s1.begin( );  
   cout << "The first element of s1 is " << *s1_Iter << endl;  
  
   s1_Iter = s1.begin( );  
   s1.erase( s1_Iter );  

   s1_Iter = s1.begin( );  
   cout << "The first element of s1 is now " << *s1_Iter << endl;  
}Output:The first element of s1 is 1
The first element of s1 is now 2In the above example, begin() function is used to return an iterator pointing to the first element in the mymultiset multiset.Next TopicC++ multiset? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.