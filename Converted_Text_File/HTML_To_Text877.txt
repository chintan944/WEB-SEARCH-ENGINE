Azure Load Balancer - javatpoint?HomeMicrosoft AzureIoTComputer NetworkControl SystemJavaHTMLCSSAptitudeSeleniumKotlinC#JavaScriptjQueryQuizProjectsInterview QCommentForumTrainingMicrosoft Azure TutorialMicrosoft Azure Tutorial Cloud Computing Overview Azure PortalAzure Storage ServiceStorage Service Azure Storage Account Azure Blob Storage Creating a Container Blob Configuration Azure Storage Security Azure File Storage Table & Queue Storage Azure Disk Storage Storage Monitoring Storage Resource ToolsNetwork ServicesAzure Network Service Azure Virtual Network Azure Network Security Azure Network Interface Availability Zones & Sets Azure Load Balancer Azure VNet ConnectivityCompute ServicesAzure Compute Service Azure Virtual Machines Azure VM Storage Virtual Machine Scale Set Azure Backup Azure VM Security Azure VM Monitoring Azure Cloud ServiceApp ServicesAzure App Services Azure Web App Azure Mobile App Azure Notification Hub Azure API Apps App Service Backup App Service Security App Service Monitoring Azure CDN Azure Media ServiceDatabase ServiceAzure Database service Azure SQL Database SQL Database Configuration SQL Managed Instance Azure COSMOS DB Azure Data Factory SQL Data WarehouseAzure DevOpsAzure DevOps DevOps Repository DevOps PipelineInterview QuestionsAzure Interviewnext ? ? prevAzure Load BalancerThe load balancer is used to distribute the incoming traffic to the pool of virtual machines. It stops routing the traffic to a failed virtual machine in the pool. In this way, we can make our application resilient to any software or hardware failures in that pool of virtual machines.Features of Azure load balancerLoad Balancing: Azure load balancer uses a 5-tuple hash composed of source IP, source port, destination IP, destination port, and protocol. We can configure a load balancing role within the load balancer in such a way based on the source port and source IP address from where the traffic is originating.Port forwarding: Load balancer also has port forwarding capability if we have a pool of web servers, and we don't want to associate public IP address for each web server in that pool. If we're going to carry out any maintenance activities, you need to RDP into those Web servers having a public IP address on that web servers.Application agnostic and transparent: Load balancer doesn't directly interact with TCP or UDP or the application layer. We can route the traffic based on URL or multi-site hosting, and then we can go for the application gateway.Automatic reconfiguration: Load balancer can reconfigure itself when we scale up or down instances. So, if we are adding more virtual machines into the backend pool, automatically load balancer will reconfigure.Health probes: As we discussed earlier, the load balancer can recognize any failed virtual machines in the backend pool and stop routing the traffic to that particular failed virtual machine. It will recognize using health probes we can configure a health probe to determine the health of the instances in the backend pool.Outbound connection: All the outbound flows from a private IP address inside our virtual network to public IP addresses on the Internet can be translated to a frontend IP of the load balancer.Configuration elements of Load BalancerFront-end IP configuration: It is the IP address to which the incoming traffic will initially come to, and Azure load balancer can have one or more front end IP addresses. They are sometimes also called as virtual IPs.Back-end address pool: These are the pool of virtual machines to which the traffic will eventually go to.Load balancing rules: A load balancing rule is simply a mapping between the front end IP configuration and back-end address pool.Probes: Probes enable us to keep track of the health of VM instances. If a health probe files, the VM instance will be taken out of rotation automatically.Inbound & Outbound NAT rules: NAT rules defining the inbound traffic flowing through the front end IP and distributes to the backend IP. Outbound rules will transmit VM private IP to load balancer public IP.Creating Azure Load BalancerStep1: Go to the Azure portal, and click on create a Resource. After that, type-in Load Balancer, and click on it.Step 2: You are now on the Load Balancer creation page. Fill all the required details as the figure below. And click on review+create.Step 3: You will be redirected to the review page. Check all the details and click on Create.Your Load Balancer is now created.Next TopicAzure VNet Connectivity? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.