Bash Relative vs. Absolute path - Javatpoint?HomeJavaCBashJavaScriptXMLAjaxSQLC++C#HTMLAndroidCloudDesign PatternQuizProjectsInterview QCommentForumBash TutorialBash Tutorial What is Bash History of Bash Features of Bash Bash Scripting Filesystem & File Permission Hello World! Bash Script Relative vs Absolute path Bash Comments Bash Quotes Bash Variables Read User Input Bash Date Format Bash SleepBash OperatorsBash Arithmetic OperatorsConditional StatementsBash If Statement Bash If Else Bash Else If Bash CaseBash LoopsBash For Loop Bash While Loop Bash Until LoopBash StringBash String Bash Find String Bash Split String Bash Substring Bash Concatenate StringBash FunctionBash FunctionsBash ArrayBash ArraysMiscellaneousBash Read File Bash Write File Check if file Exists Check if Variable is Set Bash Alias Git Bash Zsh vs Bash Bash Hash Commandnext ? ? prevRelative vs. Absolute pathBefore creating a first Bash Script, you should be well aware of the shell navigation and the difference between the relative and absolute path for an intended file. So let's understand what they are?What is the Path?A path to a file is a merged form of slash (/) and alpha-numeric characters. It determines the unique location of a file or directory in an OS filesystem.Absolute PathAn Absolute Path is a full path specifying the location of a file or directory from the root directory or start of the actual filesystem.Example: /home/javatpoint/Desktop/CollegeStudentAn Absolute path of any directory always starts with a slash (/) representing the directory root. Besides this, all slashes in the directory path separate the directories.All directories names in the absolute path are written in the hierarchy order. The parent directory name is written on the left side.The last name in an absolute path may belong to a file or directory. Besides the last name, all names belong to the directories.The absolute path of the current directory can be determined by using the pwd command.Relative PathThe relative path of a file is its location relative to the current working directory. It never starts with a slash (/). It begins with the ongoing work directory.Example: Desktop/CollegeStudentSingle Dot (.) resolves to the current directory.Double Dot (..) resolves to the parent directory of the present work directory.Tilde (~) represents the home directory of logged in user.Relative Path Vs Absolute Path:The topmost directory in any filesystem is the root directory denoted by the slash (/). You can describe the location of any file or directory in the filesystem with the absolute path. That means you will take every step starting from the root directory or the absolute beginning of the filesystem.An absolute path is unambiguous and may be inconvenient to work with, especially if you are working with deeply nested directories. To get a simpler mode of the things, you can use the Relative path instead. Such that, if you are working with files in or near the present working directory, this can save you from a lot of typing.Every time you've referred to a file by just its name, you've been using a relative path. This is the most straightforward sort of relative path. The shell looks for the specified file name within the current directory.See these examples so that you know how the relative path is convenient over the absolute path.1. Absolute Path2. Relative PathShell Navigation: There are two commands (cd and pwd) which help in the navigation of GNU/Linux filesystem thoroughly, where,cd is used for changing the directory,pwd for printing the current working directory.We can easily navigate throughout the filesystem with the help of these commands using both the relative and absolute path. Just follow the given basic example.Here, you can see how cd and pwd command help in navigation for different directories, i.e., root, parent, and home.Next TopicBash Comments? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.