COA | Bus and Memory Transfer - javatpoint?HomeCOAComputer FundamentalsComputer NetworkControl SystemJavaHTMLCSSSeleniumJavaScriptjQueryQuizProjectsInterview QCommentForumTrainingCOA TutorialCOA Tutorial CA VS CO Evolution of Computing Devices Functional units of Digital System Basic Operational ConceptsBasic CO and DesignGeneral System Architecture Store Program Control Concept Flynn's Classification of Computers Computer RegistersComputer InstructionsComputer Instructions Design of Control Unit Instruction Cycle Control Logic GatesDigital Logic CircuitsDigital Computers Logic Gates Boolean Algebra Examples of Boolean algebra simplification Laws of Boolean Algebra Simplification using Boolean AlgebraMap SimplificationMap Simplification ExamplesCombinational CircuitsCombinational Circuits Half - Adder Full - AdderFlip - FlopsS-R Flip-Flop D Flip-Flop JK Flip-Flop T Flip-FlopDigital ComponentsIntegrated Circuits Decoders Encoders Multiplexers De - multiplexers Registers Shift RegistersRegister TransferRegister Transfer Language Register Transfer Bus and Memory TransferMicro-OperationsArithmetic Micro-Operations Binary Adder Binary Adder-Subtractor Binary IncrementerMemory OrganizationMemory Hierarchy Main Memory Auxiliary Memory Associative Memory Cache MemoryPipelineParallel Processing Pipelining Arithmetic Pipeline Instruction Pipelinenext ? ? prevBus and Memory TransfersA digital system composed of many registers, and paths must be provided to transfer information from one register to another. The number of wires connecting all of the registers will be excessive if separate lines are used between each register and all other registers in the system.A bus structure, on the other hand, is more efficient for transferring information between registers in a multi-register configuration system.A bus consists of a set of common lines, one for each bit of register, through which binary information is transferred one at a time. Control signals determine which register is selected by the bus during a particular register transfer.The following block diagram shows a Bus system for four registers. It is constructed with the help of four 4 * 1 Multiplexers each having four data inputs (0 through 3) and two selection inputs (S1 and S2).We have used labels to make it more convenient for you to understand the input-output configuration of a Bus system for four registers. For instance, output 1 of register A is connected to input 0 of MUX1.The two selection lines S1 and S2 are connected to the selection inputs of all four multiplexers. The selection lines choose the four bits of one register and transfer them into the four-line common bus.When both of the select lines are at low logic, i.e. S1S0 = 00, the 0 data inputs of all four multiplexers are selected and applied to the outputs that forms the bus. This, in turn, causes the bus lines to receive the content of register A since the outputs of this register are connected to the 0 data inputs of the multiplexers.Similarly, when S1S0 = 01, register B is selected, and the bus lines will receive the content provided by register B.The following function table shows the register that is selected by the bus for each of the four possible binary values of the Selection lines.Note: The number of multiplexers needed to construct the bus is equal to the number of bits in each register. The size of each multiplexer must be 'k * 1' since it multiplexes 'k' data lines. For instance, a common bus for eight registers of 16 bits each requires 16 multiplexers, one for each line in the bus. Each multiplexer must have eight data input lines and three selection lines to multiplex one significant bit in the eight registers.A bus system can also be constructed using three-state gates instead of multiplexers.The three state gates can be considered as a digital circuit that has three gates, two of which are signals equivalent to logic 1 and 0 as in a conventional gate. However, the third gate exhibits a high-impedance state.The most commonly used three state gates in case of the bus system is a buffer gate.The graphical symbol of a three-state buffer gate can be represented as:The following diagram demonstrates the construction of a bus system with three-state buffers.The outputs generated by the four buffers are connected to form a single bus line.Only one buffer can be in active state at a given point of time.The control inputs to the buffers determine which of the four normal inputs will communicate with the bus line.A 2 * 4 decoder ensures that no more than one control input is active at any given point of time.Memory TransferMost of the standard notations used for specifying operations on memory transfer are stated below.The transfer of information from a memory unit to the user end is called a Read operation.The transfer of new information to be stored in the memory is called a Write operation.A memory word is designated by the letter M.We must specify the address of memory word while writing the memory transfer operations.The address register is designated by AR and the data register by DR.Thus, a read operation can be stated as:  Read:  DR ? M [AR] The Read statement causes a transfer of information into the data register (DR) from the memory word (M) selected by the address register (AR).And the corresponding write operation can be stated as:  Write: M [AR] ? R1The Write statement causes a transfer of information from register R1 into the memory word (M) selected by address register (AR).Next TopicArithmetic Micro-Operations? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.