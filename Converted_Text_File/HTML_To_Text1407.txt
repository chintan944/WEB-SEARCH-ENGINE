Compiler Phases - javatpoint?HomeCompilerData StructureCC++C#JavaSQLHTMLCSSJavaScriptAjaxAndroidCloudDesign PatternQuizProjectsInterview QCommentCompiler TutorialCompiler Tutorial Compiler Introduction Compiler Phases Compiler Passes Bootstrapping Finite State machine Regular expression Optimization of DFA LEX Formal Grammar BNF Notation YACC Context free Grammars Capabilities of CFG Derivation Parse Tree AmbiguityBasic ParsingParser Shift Reduce Parsing Operator PrecedencePredictive ParsersLR parser LR(0) Items SLR(1) Parsing CLR(1) Parsing LALR(1) Parsing Parser GeneratorSDTSyntax Directed Translation SDT Translation scheme SDT ImplementationIntermediate Code Postfix Notation Parse and syntax trees Three address code Quadruples Triples Assignment statements Boolean expressions Flow altering statements Postfix translation Array references Procedures call Declarations Case StatementsSymbol TablesSymbol Table DS for symbols tables Scope InformationAdministrationStorage Organization Activation Record Storage AllocationError DetectionLexical Error Syntax Error Semantic ErrorCode GenerationCode Generation Design Issues Target Machine Run Time Storage Basic Block Flow Graph Block Optimization Code GeneratorCode OptimizationMachine Independent Loop optimization DAG Representation Data-Flow Analysisnext ? ? prevCompiler PhasesThe compilation process contains the sequence of various phases. Each phase takes source program in one representation and produces output in another representation. Each phase takes input from its previous stage.There are the various phases of compiler:Fig: phases of compilerLexical Analysis:Lexical analyzer phase is the first phase of compilation process. It takes source code as input. It reads the source program one character at a time and converts it into meaningful lexemes. Lexical analyzer represents these lexemes in the form of tokens.Syntax AnalysisSyntax analysis is the second phase of compilation process. It takes tokens as input and generates a parse tree as output. In syntax analysis phase, the parser checks that the expression made by the tokens is syntactically correct or not.Semantic AnalysisSemantic analysis is the third phase of compilation process. It checks whether the parse tree follows the rules of language. Semantic analyzer keeps track of identifiers, their types and expressions. The output of semantic analysis phase is the annotated tree syntax.Intermediate Code GenerationIn the intermediate code generation, compiler generates the source code into the intermediate code. Intermediate code is generated between the high-level language and the machine language. The intermediate code should be generated in such a way that you can easily translate it into the target machine code.Code OptimizationCode optimization is an optional phase. It is used to improve the intermediate code so that the output of the program could run faster and take less space. It removes the unnecessary lines of the code and arranges the sequence of statements in order to speed up the program execution.Code GenerationCode generation is the final stage of the compilation process. It takes the optimized intermediate code as input and maps it to the target machine language. Code generator translates the intermediate code into the machine code of the specified computer.Example:Next TopicCompiler Passes? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.