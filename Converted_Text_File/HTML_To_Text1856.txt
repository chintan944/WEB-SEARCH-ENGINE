C++ Queue - javatpoint?HomeCC++C#JavaPHPHTMLCSSJavaScriptjQueryXMLJSONAjaxNode.jsSQLQuizProjectsInterview QCommentForumTrainingC++ Queue FunctionC++ Queue back() emplace() empty() front() pop() push() size()next ? ? prevC++ queueIn computer science we go for working on a large variety of programs. Each of them has their own domain and utility. Based on the purpose and environment of the program creation, we have a large number of data structures available to choose from. One of them is 'queues. Before discussing about this data type let us take a look at its syntax.Syntaxtemplate<class T, class Container = deque<T> > class queue;This data structure works on the FIFO technique, where FIFO stands for First In First Out. The element which was first inserted will be extracted at the first and so on. There is an element called as 'front' which is the element at the front most position or say the first position, also there is an element called as 'rear' which is the element at the last position. In normal queues insertion of elements take at the rear end and the deletion is done from the front.Queues in the application areas are implied as the container adaptors.The containers should have a support for the following list of operations:emptysizepush_backpop_frontfrontbackTemplate ParametersT: The argument specifies the type of the element which the container adaptor will be holding.Container: The argument specifies an internal object of container where the elements of the queues are held.Member TypesGiven below is a list of the queue member types with a short description of the same.Member TypesDescriptionvalue_typeElement type is specified.container_typeUnderlying container type is specified.size_typeIt specifies the size range of the elements.referenceIt is a reference type of a container.const_referenceIt is a reference type of a constant container.FunctionsWith the help of functions, an object or variable can be played with in the field of programming. Queues provide a large number of functions that can be used or embedded in the programs. A list of the same is given below:FunctionDescription(constructor)The function is used for the construction of a queue container.emptyThe function is used to test for the emptiness of a queue. If the queue is empty the function returns true else false.sizeThe function returns the size of the queue container, which is a measure of the number of elements stored in the queue.frontThe function is used to access the front element of the queue. The element plays a very important role as all the deletion operations are performed at the front element.backThe function is used to access the rear element of the queue. The element plays a very important role as all the insertion operations are performed at the rear element.pushThe function is used for the insertion of a new element at the rear end of the queue.popThe function is used for the deletion of element; the element in the queue is deleted from the front end.emplaceThe function is used for insertion of new elements in the queue above the current rear element.swapThe function is used for interchanging the contents of two containers in reference.relational operatorsThe non member function specifies the relational operators that are needed for the queues.uses allocator<queue>As the name suggests the non member function uses the allocator for the queues.Example: A simple program to show the use of basic queue functions.#include <iostream>
#include <queue>
using namespace std;
void showsg(queue <int> sg)
{
	queue <int> ss = sg;
	while (!ss.empty())
	{
		cout << '\t' << ss.front();
		ss.pop();
	}
	cout << '\n';
}

int main()
{
	queue <int> fquiz;
	fquiz.push(10);
	fquiz.push(20);
	fquiz.push(30);

	cout << "The queue fquiz is : ";
	showsg(fquiz);

	cout << "\nfquiz.size() : " << fquiz.size();
	cout << "\nfquiz.front() : " << fquiz.front();
	cout << "\nfquiz.back() : " << fquiz.back();

	cout << "\nfquiz.pop() : ";
	fquiz.pop();
	showsg(fquiz);

	return 0;
}Output:The queue fquiz is : 	10	20	30

fquiz.size() : 3
fquiz.front() : 10
fquiz.back() : 30
fquiz.pop() : 	20	30Next TopicC++ Queue? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.