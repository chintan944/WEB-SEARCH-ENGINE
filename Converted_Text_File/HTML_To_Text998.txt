Binary Search - javatpoint?HomeData StructureCC++C#JavaSQLHTMLCSSJavaScriptAjaxAndroidCloudDesign PatternQuizProjectsInterview QCommentForumDS TutorialDS Tutorial DS Introduction DS Algorithm Asymptotic Analysis DS Pointer DS StructureDS ArrayDS Array 2D ArrayDS Linked ListLinked List Doubly Linked List Circular Linked List Circular Doubly ListDS StackDS Stack Array Implementation Linked List ImplementationDS QueueDS Queue Array Representation Linked List Representation Circular QueueDS TreeDS Tree Binary Tree Binary Search Tree AVL Tree B Tree B+ TreeDS GraphDS Graph Graph Implementation BFS Algorithm DFS Algorithm Spanning TreeDS SearchingLinear Search Binary SearchDS SortingBubble Sort Bucket Sort Comb Sort Counting Sort Heap Sort Insertion Sort Merge Sort Quick Sort Radix Sort Selection Sort Shell Sort Bitonic Sort Cocktail Sort Cycle Sort Tim Sortnext ? ? prevBinary SearchBinary search is the search technique which works efficiently on the sorted lists. Hence, in order to search an element into some list by using binary search technique, we must ensure that the list is sorted.Binary search follows divide and conquer approach in which, the list is divided into two halves and the item is compared with the middle element of the list. If the match is found then, the location of middle element is returned otherwise, we search into either of the halves depending upon the result produced through the match.Binary search algorithm is given below.BINARY_SEARCH(A, lower_bound, upper_bound, VAL)Step 1: [INITIALIZE] SET BEG = lower_boundEND = upper_bound, POS = - 1Step 2: Repeat Steps 3 and 4 while BEG =ENDStep 3: SET MID = (BEG + END)/2Step 4: IF A[MID] = VALSET POS = MIDPRINT POSGo to Step 6ELSE IF A[MID] > VALSET END = MID - 1ELSESET BEG = MID + 1[END OF IF][END OF LOOP]Step 5: IF POS = -1PRINT "VALUE IS NOT PRESENT IN THE ARRAY"[END OF IF]Step 6: EXITComplexitySNPerformanceComplexity1Worst caseO(log n)2Best caseO(1)3Average CaseO(log n)4Worst case space complexityO(1)ExampleLet us consider an array arr = {1, 5, 7, 8, 13, 19, 20, 23, 29}. Find the location of the item 23 in the array.In 1st step :BEG = 0 
END = 8ron
MID = 4 
a[mid] = a[4] = 13 < 23, thereforein Second step:Beg = mid +1 = 5 
End = 8
mid = 13/2 = 6  
a[mid] = a[6] = 20 < 23, therefore; in third step:beg = mid + 1 = 7 
End = 8 
mid = 15/2 = 7
a[mid] = a[7] 
 a[7] = 23 = item; 
therefore, set location = mid; 
The location of the item will be 7. Binary Search Program using RecursionC program#include<stdio.h>
int binarySearch(int[], int, int, int);
void main ()
{
	int arr[10] = {16, 19, 20, 23, 45, 56, 78, 90, 96, 100};
	int item, location=-1; 
	printf("Enter the item which you want to search ");
	scanf("%d",&item);
	location = binarySearch(arr, 0, 9, item);
	if(location != -1) 
	{
		printf("Item found at location %d",location);
	}
	else
	{
		printf("Item not found");
	}
} 
int binarySearch(int a[], int beg, int end, int item)
{
	int mid;
	if(end >= beg) 
	{	
		mid = (beg + end)/2;
		if(a[mid] == item)
		{
			return mid+1;
		}
		else if(a[mid] < item) 
		{
			return binarySearch(a,mid+1,end,item);
		}
		else 
		{
			return binarySearch(a,beg,mid-1,item);
		}
	
	}
	return -1; 
}Output:Enter the item which you want to search 
19 
Item found at location 2Javaimport java.util.*;
public class BinarySearch {
public static void main(String[] args) {
	int[] arr = {16, 19, 20, 23, 45, 56, 78, 90, 96, 100};
	int item, location = -1;
	System.out.println("Enter the item which you want to search");
	Scanner sc = new Scanner(System.in);
	item = sc.nextInt();
	location = binarySearch(arr,0,9,item);
	if(location != -1)
	System.out.println("the location of the item is "+location);
	else 
		System.out.println("Item not found");
	}
public static int binarySearch(int[] a, int beg, int end, int item)
{
	int mid;
	if(end >= beg) 
	{	
		mid = (beg + end)/2;
		if(a[mid] == item)
		{
			return mid+1;
		}
		else if(a[mid] < item) 
		{
			return binarySearch(a,mid+1,end,item);
		}
		else 
		{
			return binarySearch(a,beg,mid-1,item);
		}
	
	}
	return -1; 
}
}Output:Enter the item which you want to search 
45 
the location of the item is 5 C#using System;
				
public class LinearSearch
{
	public static void Main()
	{
	int[] arr = {16, 19, 20, 23, 45, 56, 78, 90, 96, 100};
	int location=-1; 
	Console.WriteLine("Enter the item which you want to search ");
	int item = Convert.ToInt32(Console.ReadLine());
	location = binarySearch(arr, 0, 9, item);
	if(location != -1) 
	{
		Console.WriteLine("Item found at location "+ location);
	}
	else
	{
		Console.WriteLine("Item not found");
	}
} 
public static int binarySearch(int[] a, int beg, int end, int item)
{
	int mid;
	if(end >= beg) 
	{	
		mid = (beg + end)/2;
		if(a[mid] == item)
		{
			return mid+1;
		}
		else if(a[mid] < item) 
		{
			return binarySearch(a,mid+1,end,item);
		}
		else 
		{
			return binarySearch(a,beg,mid-1,item);
		}
	
	}
	return -1; 

	}
}Output:Enter the item which you want to search 
20 
Item found at location 3Pythondef binarySearch(arr,beg,end,item):
    if end >= beg:
        mid = int((beg+end)/2)
        if arr[mid] == item :
            return mid+1
        elif arr[mid] < item : 
            return binarySearch(arr,mid+1,end,item)
        else: 
            return binarySearch(arr,beg,mid-1,item)
    return -1
    

arr=[16, 19, 20, 23, 45, 56, 78, 90, 96, 100];
item = int(input("Enter the item which you want to search ?"))
location = -1; 
location = binarySearch(arr,0,9,item);
if location != -1: 
    print("Item found at location %d" %(location))
else: 
    print("Item not found")Output:Enter the item which you want to search ? 
96 
Item found at location 9 

Enter the item which you want to search ? 
101 
Item not foundBinary Search function using Iterationint binarySearch(int a[], int beg, int end, int item)
{
	int mid;
	while(end >= beg) 
	{	
		mid = (beg + end)/2;
		if(a[mid] == item)
		{
			return mid+1;
		}
		else if(a[mid]  item) 
		{
			beg = mid + 1;
		}
		else 
		{
			end = mid - 1; 
		}
	
	}
	return -1; 
} Next TopicBubble Sort? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.