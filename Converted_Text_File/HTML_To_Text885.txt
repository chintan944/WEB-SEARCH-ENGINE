Azure SQL Database Configuration - javatpoint?HomeMicrosoft AzureIoTComputer NetworkControl SystemJavaHTMLCSSAptitudeSeleniumKotlinC#JavaScriptjQueryQuizProjectsInterview QCommentForumTrainingMicrosoft Azure TutorialMicrosoft Azure Tutorial Cloud Computing Overview Azure PortalAzure Storage ServiceStorage Service Azure Storage Account Azure Blob Storage Creating a Container Blob Configuration Azure Storage Security Azure File Storage Table & Queue Storage Azure Disk Storage Storage Monitoring Storage Resource ToolsNetwork ServicesAzure Network Service Azure Virtual Network Azure Network Security Azure Network Interface Availability Zones & Sets Azure Load Balancer Azure VNet ConnectivityCompute ServicesAzure Compute Service Azure Virtual Machines Azure VM Storage Virtual Machine Scale Set Azure Backup Azure VM Security Azure VM Monitoring Azure Cloud ServiceApp ServicesAzure App Services Azure Web App Azure Mobile App Azure Notification Hub Azure API Apps App Service Backup App Service Security App Service Monitoring Azure CDN Azure Media ServiceDatabase ServiceAzure Database service Azure SQL Database SQL Database Configuration SQL Managed Instance Azure COSMOS DB Azure Data Factory SQL Data WarehouseAzure DevOpsAzure DevOps DevOps Repository DevOps PipelineInterview QuestionsAzure Interviewnext ? ? prevAzure SQL Database ConfigurationWe'll see here the key configuration features of the Azure SQL Server and SQL database. In terms of Azure SQL database configuration, the first key thing is Firewall rules at a server level.Firewall RulesAt a logical server within Azure, we can define some firewall rules. It can be IP rules. IP rules will grant access to the database based on the originating IP address of each request. And the second type of rule is the virtual network rule. It is based on virtual network service endpoints.Rules for Azure SQL databases can be defined at two levels:Server level firewall rules: These firewall rules enable clients to access our entire Azure SQL server, i.e., each database within a similar logical server. These firewall rules will be stored in the master database. Server-level firewall rules can be configured by using the portal or by using Transact-SQL statements.Database-level firewall rules: These rules enable clients to access certain (secure) databases within the same logical server. We can create these rules for each database (including the master database), and they are stored in the individual databases.Configuring Firewall rules in Azure portalStep 1: Go to the firewall setting in your database server that you have already created. After that, click on Add Client.Step 2: Now, click on Add existing virtual network and fill the required details, as shown in the figure below.Step 3: Finally click on save, you will get the notification that your firewall rules got updated.Geo-ReplicationIt is defined at a database level, not server level, and it is designed as a business continuity solution that allows the application to perform quick disaster recovery of individual databases in case of a regional disaster or large scale outage.When we are configuring geo-replication, we specify a secondary database at a location far away from the primary location. We can have a traffic manager that routes the traffic by default to our primary load balancer and that the primary load balancer is based on the application request. If it is read and write, then it can route to a primary logical server. If it is 'read-only', it can route to a secondary server. Thereby the advantage of geo-replication is that we can offload some of the read-only traffic from primary and route to secondary.The primary performance will be good because read-only queries will consume a certain amount of CPU or DTU units installed that we have a secondary database where the data continuously get replicated.Configuring Geo-Replication using Azure portalStep 1: Click on the Geo-Replication option; you will see the following window.Step 2: Now, select the location where you want to replicate your database. You can choose multiple locations.Step 3: Now, create a SQL server for the place where you want to replicate your data.Step 4: Your server has been created and replicated successfully.Step 5: You can see in the following figure, where the servers are replicated.Failover GroupsAuto-failover group is a feature of the SQL database that allows us to manage replication and failover of a group of databases on a logical server or all databases in a Managed Instance to another region.We can initiate failover manually, or we can delegate it to SQL Database service based on a user-defined policy. When we are using auto-failover groups with automatic failover policy, any outage that impacts one or many of the databases in the group results in automatic failover. It allows the read-write SQL application to transparently reconnect to the primary database when the database change after failover.Database backupsThe SQL database uses SQL server technology to create full, differential, and transaction log backups for Point-in-time Restore (PITR). The transaction log backups generally occur every 5-10 minutes, and differential backups occur typically every 12 hours, with the frequency based on the compute size and amount of database activity. Each SQL database has a default backup retention period between 7 and 35 days that depends on the purchasing model and service tier.Long-term backup retention (LTR) leverages the full database backups that are automatically created to enable point-time restore. These backups are copied to different storage blobs if the LTR policy is configured. We can set an LTR policy for each SQL database and specify how frequently we need to copy the backups to the long-term storage blobs.Next TopicAzure SQL Managed Instance? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.