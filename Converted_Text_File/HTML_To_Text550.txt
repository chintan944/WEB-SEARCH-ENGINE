Architecture of Magento 2 - Javatpoint?HomeJavaMagento 2PHPHTMLCSSMySQLBootstrapJavaScriptjQueryCXMLQuizProjectsInterview QCommentForumTrainingMagento 2 TutorialMagento 2 Tutorial What is Magento 2 History of Magento 2 Features of Magento 2 Advantage & Disadvantage Architecture of Magento 2 Magento 2 vs Magento 1 What is ComposerInstall & ConfigureXAMPP Installation Magento 2 Installation Installation using Composer Installation Errors Basic Configuration Store ConfigurationMagento 2 Store SetupMagento 2 Products Types Create Product Category Create Product Create Product Attribute Create Attribute Sets Setup Products in Homepage setup multiple websites, stores, store views Create & Manage CMS Inventory Management Setup Tax, Tax Rule, Tax Rates Setup Shipping MethodsPayment SetupPayment Methods Setup PayPal Payment setup Check/Money Order payment method set up Bank Transfer payment method set up Cash on Delivery (COD) payment method set up Zero Subtotal Checkout payment method set up Purchase Order (PO) payment method set up Authorize.net methodOrder ProcessingMagento 2: Order Life Cycle Magento 2: Order Processing Magento 2: Setup Order EmailsMiscMagento 2 Reports Generate Order Report Magento 2 Site Optimization Search Engine Optimization Profiling & Database performance Magento 2 Setup NewsletterInterview QuestionsMagento I/QPHP TechnologiesPHP Tutorial WordPress Tutorial CodeIgniter Tutorial YII Tutorial Laravel Tutorialnext ? ? prevArchitecture of Magento 2In this topic, we are going to discuss the architecture of Magento 2. Magento 2 has a totally different architecture than Magento 1. Its architecture is designed with the objective of making the source code as an extensive and modularized as possible. The main purpose of this approach is to allow it to be easily adapted and customized according to the need of the project. Every business logic and functionality is designed in the form of modules. So, every module can work as a standalone unit.Magento 2 has a Model View ViewModel (MVVM) architecture. This MVVM architecture provides much more robust separation between the Model and View layer, as it is closely related to the Model View Controller (MVC). The brief description of MVVC is given below:Model: It holds the business logic of the application, and depends on an associated class - Resource Model for database access. Similar to the MVC, it is the logic of data management and description of the fundamental data which is necessary for the operation of the application. The model responds to the request coming from the view.View: The view is a graphical interface that the users see on the screen. It is responsible for displaying the respond for the user request. The view is a structure or a layout, which represents the data in a particular format. Views specify that "how your data looks like". It is a subscriber for the changes of the property values or commands provided by the ViewModel.ViewModel: The ViewModel interacts with the Model layer and exposes only necessary information to the View layer. This is handled by module's Block classes in Magento 2. An important thing to notice that this was usually part of the Controller role of an MVC system. In MVVM, the Controller is only responsible for handling the user flow means it receives requests and either tell the system to render a view or to redirect the user to another route.It contains a Model which is converted to a View and also contains the commands that can be used to affect the Model. The ViewModel is basically an abstraction of the view exposing public properties and commands.Magento 2 is split into four layers, according to the official documentation.Presentation LayerService LayerDomain LayerPersistence LayerThe detailed description of Magento 2's layer architecture is given below.1) Presentation LayerThe presentation layer is the uppermost layer of Magento 2 architecture. When we interact with the web interface of Magento, that time, we are interacting with the presentation layer code. It contains all controllers and View elements such as - layouts, templates, block, and css.js, etc. The presentation layer calls the service layer using service contracts, usually. It can overlap business logic.Web users, system administrators, are the user of the presentation layer2) Service LayerThe service layer is the middle layer among the presentation layer and domain layer. It provides a bridge between the presentation and domain layer and resource-specific data. The service layer implements service contracts, which are defined using the PHP interface. These service contracts allow us to add or change the business logic resource model without breaking the system. This is done using the dependency injection configuration file (di.xml).The service layer grants access to API (REST/SOAP or other modules). It resides above the domain layer and below the presentation layer.3) Domain LayerThe domain layer is responsible for business logic. It does not contain database-specific or resource-specific information. The domain layer defines the generic Magento data objects or models which contain business logic. This logic describes that which operation can be performed on the particular types of data, such as Customer object.To retrieve the data from the database with the MySQL calls, each domain-layer model has a reference to a resource model.4) Persistence LayerIt describes the resource model, which is responsible for data extraction and modification in the database using the CRUD (Create, Read, Update, and DELETE) requests. For completing these requests, the resource model contains the SQL code. Additional business logic capabilities are also implemented.For example - database functions implementation and data validation.Next TopicMagento 2 vs Magento 1? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.