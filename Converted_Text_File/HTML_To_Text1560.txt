Control Flow Testing in White Box Testing - javatpoint?HomeSoftware TestingCompilerJavaCOAComputer NetworkHTMLCSSSeleniumServletJSPjQueryQuizProjectsInterview QCommentForumTrainingSoftware TestingTutorial Software Development Life Cycle Spiral Model Waterfall model Software Testing Life CycleTypes of TestingManual Testing Automation TestingTypes of ManualWhite Box Testing Black Box Testing Grey Box TestingWhite Box TechniquesData Flow Testing Control Flow Testing Branch Coverage Testing Statement Coverage Testing Decision Coverage TestingBlack Box TechniquesDecision Table All-pair Testing Cause-Effect Testing State Transition Use CaseTypes of Black BoxFunctional Testing Non-Functional TestingTypes of FunctionalUnit Testing Integration Testing System TestingTypes of Non-functionalPerformance Testing Usability Testing Compatibility TestingTest case developmentTesting Documentation Test Scenario Test CaseTesting TechniquesError Guessing Equivalence Portioning Boundary Value analysisTest ManagementTest Plan Test case review process Requirement Traceability MatrixDefect TrackingBug in Software Testing Bug Life cycle Severity & Priority Test EnvironmentOther types of TestingRegression Testing Smoke Testing Sanity Testing Exploratory Testing Visual Testing Acceptance Testing Alpha Testing Beta Testing Adhoc TestingSoftware Testing ToolsSoftware testing tools Test management tools Defect/Bug tracking tools Automation testing tools Performance testing tools Cross-browser testing tools Integration testing tools Unit testing tools Mobile Testing Tools GUI testing tools Security testing toolsDifferencesAutomation Testing vs Manual Testing Load Testing vs Stress Testing Smoke Testing vs Sanity Testing System Testing vs Acceptance Testing Quality Assurance vs Quality Control Static Testing vs Dynamic Testing Verification vs Validation Testing Alpha Testing vs Beta Testing Black Box vs. White Box vs. Grey Box TestingInterview QuestionsSoftware Testing i/Qnext ? ? prevControl Flow TestingControl flow testing is a testing technique that comes under white box testing. The aim of this technique is to determine the execution order of statements or instructions of the program through a control structure. The control structure of a program is used to develop a test case for the program. In this technique, a particular part of a large program is selected by the tester to set the testing path. It is mostly used in unit testing. Test cases represented by the control graph of the program.Control Flow Graph is formed from the node, edge, decision node, junction node to specify all possible execution path.Notations used for Control Flow GraphNodeEdgeDecision NodeJunction nodeNodeNodes in the control flow graph are used to create a path of procedures. Basically, it represents the sequence of procedures which procedure is next to come so, the tester can determine the sequence of occurrence of procedures.We can see below in example the first node represent the start procedure and the next procedure is to assign the value of n after assigning the value there is decision node to decide next node of procedure as per the value of n if it is 18 or more than 18 so Eligible procedure will execute otherwise if it is less than 18 Not Eligible procedure executes. The next node is the junction node, and the last node is stop node to stop the procedure.EdgeEdge in control flow graph is used to link the direction of nodes.We can see below in example all arrows are used to link the nodes in an appropriate direction.Decision nodeDecision node in the control flow graph is used to decide next node of procedure as per the value.We can see below in example decision node decide next node of procedure as per the value of n if it is 18 or more than 18 so Eligible procedure will execute otherwise if it is less than 18, Not Eligible procedure executes.Junction nodeJunction node in control flow graph is the point where at least three links meet.Examplepublic class VoteEligiblityAge{
 
public static void main(String []args){
int n=45;
if(n>=18)
{
    System.out.println("You are eligible for voting");
 }  else         
{
   System.out.println("You are not eligible for voting");
 }
}
}Diagram - control flow graphThe above example shows eligibility criteria of age for voting where if age is 18 or more than 18 so print message "You are eligible for voting" if it is less than 18 then print "You are not eligible for voting."Program for this scenario is written above, and the control flow graph is designed for the testing purpose.In the control flow graph, start, age, eligible, not eligible and stop are the nodes, n>=18 is a decision node to decide which part (if or else) will execute as per the given value. Connectivity of the eligible node and not eligible node is there on the stop node.Test cases are designed through the flow graph of the programs to determine the execution path is correct or not. All nodes, junction, edges, and decision are the essential parts to design test cases.Next TopicBranch Coverage Testing? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.