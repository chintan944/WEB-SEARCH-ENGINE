ASCII Code in Digital Electronics - Javatpoint?HomeBiometricsDigital ElectronicsComputer FundamentalsComputer NetworkControl SystemJavaHTMLCSSSeleniumJavaScriptjQueryProjectsInterview QTrainingDigital ElectronicsDigital ElectronicsBinary SystemNumber System Number Base Conversion Gray Code Excess-3 Code Error Detection & Correction Code ASCII Code Signed & Unsigned Binary Numbersnext ? ? prevASCII CodeThe ASCII stands for American Standard Code for Information Interchange. The ASCII code is an alphanumeric code used for data communication in digital computers. The ASCII is a 7-bit code capable of representing 27 or 128 number of different characters. The ASCII code is made up of a three-bit group, which is followed by a four-bit code.The ASCII Code is a 7 or 8-bit alphanumeric code.This code can represent 127 unique characters.The ASCII code starts from 00h to 7Fh. In this, the code from 00h to 1Fh is used for control characters, and the code from 20h to 7Fh is used for graphic symbols.The 8-bit code holds ASCII, which supports 256 symbols where math and graphic symbols are added.The range of the extended ASCII is 80h to FFh.The ASCII characters are classified into the following groups:Control CharactersThe non-printable characters used for sending commands to the PC or printer are known as control characters. We can set tabs, and line breaks functionality by this code. The control characters are based on telex technology. Nowadays, it's not so much popular in use. The character from 0 to 31 and 127 comes under control characters.Special CharactersAll printable characters that are neither numbers nor letters come under the special characters. These characters contain technical, punctuation, and mathematical characters with space also. The character from 32 to 47, 58 to 64, 91 to 96, and 123 to 126 comes under this category.Numbers CharactersThis category of ASCII code contains ten Arabic numerals from 0 to 9.Letters CharactersIn this category, two groups of letters are contained, i.e., the group of uppercase letters and the group of lowercase letters. The range from 65 to 90 and 97 to 122 comes under this category.ASCII TableThe values are typically represented in ASCII code tables in decimal, binary, and hexadecimal form.BinaryHexadecimalDecimalASCII SymbolDescriptionGroup000000000NULThe null character encourage the device to do nothingControl Character000000111SOHThe symbol SOH(Starts of heading) Initiates the header.Control Character000001022STXThe symbol STX(Start of Text) ends the header and marks the beginning of a message.Control Character000001133ETXThe symbol ETX(End of Text) indicates the end of the message.Control Character000010044EOTThe EOT(end of text) symbol marks the end of a completes transmissionControl Character000010155ENQThe ENQ(Enquiry) symbol is a request that requires a responseControl Character000011066ACKThe ACK(Acknowledge) symbol is a positive answer to the request.Control Character000011177BELThe BEL(Bell) symbol triggers a beep.Control Character000100088BSLets the cursor move back one step (Backspace)Control Character000100199TAB (HT)A horizontal tab that moves the cursor within a row to the next predefined position (Horizontal Tab)Control Character0001010A10LFCauses the cursor to jump to the next line (Line Feed)Control Character0001011B11VTThe vertical tab lets the cursor jump to a predefined line (Vertical Tab)Control Character0001100C12FFRequests a page break (Form Feed)Control Character0001101D13CRMoves the cursor back to the first position of the line (Carriage Return)Control Character0001110E14SOSwitches to a special presentation (Shift Out)Control Character0001111F15SISwitches the display back to the normal state (Shift In)Control Character00100001016DLEChanges the meaning of the following characters (Data Link Escape)Control Character00100011117DC1Control characters assigned depending on the device used (Device Control)Control Character00100101218DC2Control characters assigned depending on the device used (Device Control)Control Character00100111319DC3Control characters assigned depending on the device used (Device Control)Control Character00101001420DC4Control characters assigned depending on the device used (Device Control)Control Character00101011521NAKThe negative response to a request (Negative Acknowledge)Control Character00101101622SYNSynchronizes a data transfer, even if no signals are transmitted (Synchronous Idle)Control Character00101111723ETBMarks the end of a transmission block (End of Transmission Block)Control Character00110001824CANMakes it clear that transmission was faulty and the data must be discarded (Cancel)Control Character00110011925EMIndicates the end of the storage medium (End of Medium)Control Character00110101A26SUBReplacement for a faulty sign (Substitute)Control Character00110111B27ESCInitiates an escape sequence and thus gives the following characters a special meaning (Escape)Control Character00111001C28FSFile separator.Control Character00111011D29GSGroup separator.Control Character00111101E30RSRecord separator.Control Character00111111F31USUnit separator.Control Character01000002032SPBlank spaceSpecial Character01000012133!Exclamation markSpecial Character01000102234Only quotes aboveSpecial Character01000112335#Pound signSpecial Character01001002436$Dollar signSpecial Character01001012537%Percentage signSpecial Character01001102638&Commercial andSpecial Character01001112739ApostropheSpecial Character01010002840(Left bracketSpecial Character01010012941)Right bracketSpecial Character01010102A42*AsteriskSpecial Character01010112B43+Plus symbolSpecial Character01011002C44,CommaSpecial Character01011012D45-DashSpecial Character01011102E46.Full stopSpecial Character01011112F47/Forward slashSpecial Character011000030480Numbers011000131491Numbers011001032502Numbers011001133513Numbers011010034524Numbers011010135535Numbers011011036546Numbers011011137557Numbers011100038568Numbers011100139579Numbers01110103A58:ColonSpecial characters01110113B59;SemicolonSpecial characters01111003C60<Small than bracketSpecial characters01111013D61=Equals signSpecial characters01111103E62>Bigger than symbolSpecial characters01111113F63?Question markSpecial characters10000004064@At symbolSpecial characters10000014165ACapital letters10000104266BCapital letters10000114367CCapital letters10001004468DCapital letters10001014569ECapital letters10001104670FCapital letters10001114771GCapital letters10010004872HCapital letters10010014973ICapital letters10010104A74JCapital letters10010114B75KCapital letters10011004C76LCapital letters10011014D77MCapital letters10011104E78NCapital letters10011114F79OCapital letters10100005080PCapital letters10100015181QCapital letters10100105282RCapital letters10100115383SCapital letters10101005484TCapital letters10101015585UCapital letters10101105686VCapital letters10101115787WCapital letters10110005888XCapital letters10110015989YCapital letters10110105A90ZCapital letters10110115B91[Left square bracketSpecial character10111005C92\Inverse/backward slashSpecial character10111015D93]Right square bracketSpecial character10111105E94^CircumflexSpecial character10111115F95_UnderscoreSpecial character11000006096`Gravis (backtick)Special character11000016197ALowercase letters11000106298BLowercase letters11000116399CLowercase letters110010064100DLowercase letters110010165101ELowercase letters110011066102FLowercase letters110011167103GLowercase letters110100068104HLowercase letters110100169105ILowercase letters11010106A106JLowercase letters11010116B107KLowercase letters11011006C108LLowercase letters11011016D109MLowercase letters11011106E110NLowercase letters11011116F111OLowercase letters111000070112PLowercase letters111000171113QLowercase letters111001072114RLowercase letters111001173115SLowercase letters111010074116TLowercase letters111010175117ULowercase letters111011076118vLowercase letters111011177119wLowercase letters111100078120xLowercase letters111100179121yLowercase letters11110107A122zLowercase letters11110117B123{Left curly bracketSpecial characters11111007C124lVertical lineSpecial characters11111017D125}Right curly bracketsSpecial characters11111107E126~TildeSpecial characters11111117F127DELThe DEL(Delete) symbol deletes a character. This is a control character that consists of the same number in all positions.Control charactersExample 1: (10010101100001111011011000011010100111000011011111101001 110111011101001000000011000101100100110011)2Step 1: In the first step, we we make the groups of 7-bits because the ASCII code is 7 bit.1001010 1100001 1110110 1100001 1010100 1110000 1101111 1101001 1101110 1110100 1000000 0110001 0110010 0110011Step 2: Then, we find the equivalent decimal number of the binary digits either from the ASCII table or 64 32 16 8 4 2 1 scheme.BinaryDecimal64 32 16 8 4 2 11   0   0   1 0 1 064+8+2=7464 32 16 8 4 2 11    1   0   0 0 0 164+32+1=9464 32 16 8 4 2 11   1   1   0 1 1 064+32+16+4+2=11864 32 16 8 4 2 11   1   0   0 0 0 164+32+1=9764 32 16 8 4 2 11   0   1   0 1 0 064+16+4=8464 32 16 8 4 2 11   1   1   0 0 0 064+32+16=11264 32 16 8 4 2 11   1   0   1 1 1 164+32+8+4+2+1=11164 32 16 8 4 2 11   1   0   1 0 0 164+32+8+1=10564 32 16 8 4 2 11   1   0   1 1 1 064+32+8+4+2=11064 32 16 8 4 2 11   1   1   0 1 0 064+32+16+4=11664 32 16 8 4 2 11   0   0   0 0 0 06464 32 16 8 4 2 10   1   1   0 0 0 132+16+1=4964 32 16 8 4 2 10   1   1   0 0 1 032+16+2=5064 32 16 8 4 2 10   1   1   0 0 1 132+16+2+1=51Step 3: Last, we find the equivalent symbol of the decimal number from the ASCII table.DecimalSymbol74J94a118v97a84T112p111o105i110n116t64@491502513ASCII Code: JavaTpoint@123Next TopicSigned and Unsigned Binary Numbers? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.