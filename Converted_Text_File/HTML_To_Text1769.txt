C++ Math log1p() Function - javatpoint?HomeCC++C#JavaPHPHTMLCSSJavaScriptjQueryXMLJSONAjaxNode.jsSQLQuizProjectsInterview QCommentForumTrainingC++ TutorialC++ Tutorial C vs C++ C++ History C++ Features C++ Installation C++ Program C++ cout, cin, endl C++ Variable C++ Data types C++ Keywords C++ Operators C++ Identifiers C++ ExpressionC++ Control StatementC++ if-else C++ switch C++ For Loop C++ While Loop C++ Do-While Loop C++ Break Statement C++ Continue Statement C++ Goto Statement C++ CommentsC++ FunctionsC++ Functions Call by value & reference C++ Recursion C++ Storage ClassesC++ ArraysC++ Arrays C++ Array to Function Multidimensional ArraysC++ PointersC++ Pointers C++ References Reference vs Pointer C++ Memory ManagementC++ Object ClassC++ OOPs Concepts C++ Object Class C++ Constructor C++ Copy Constructor C++ Destructor C++ this Pointer C++ static C++ Structs C++ Enumeration C++ Friend Function C++ Math FunctionsC++ InheritanceC++ Inheritance C++ AggregationC++ PolymorphismC++ Polymorphism C++ Overloading C++ Overriding C++ Virtual FunctionC++ AbstractionC++ Interfaces C++ Data AbstractionC++ NamespacesC++ NamespacesC++ StringsC++ StringsC++ ExceptionsC++ Exception Handling C++ try/catch C++ User-DefinedC++ TemplatesC++ TemplatesSignal HandlingC++ Signal HandlingC++ File & StreamC++ File & Stream C++ getline()C++ MiscC++ vs C# C++ int to stringC++ STL TutorialC++ STL Components C++ Vector C++ Deque C++ List C++ Set C++ Stack C++ Queue C++ Priority Queue C++ Map C++ Multimap C++ Map C++ Bitset C++ AlgorithmC++ IteratorsC++ Iterators C++ Bidirectional Iterator C++ Forward Iterator C++ Input Iterator C++ Output IteratorC++ ProgramsC++Programs Fibonacci Series Prime Number Palindrome Number Factorial Armstrong Number Sum of digits Reverse Number Swap Number Matrix Multiplication Decimal to Binary Number in Characters Alphabet Triangle Number Triangle Fibonacci TriangleInterview QuestionInterview Questionnext ? ? prevC++ Math log1p()The function computes the natural logarithm of a given number plus one.Suppose a number is 'x':log1p(x) = log(1+x);Syntaxfloat log1p(float x);
double log1p(double x);
long double log1p(long double x);
double log1p(integral x);Note: The return_type can be float, double or long double.Parameterx: The value of which logarithm is to be calculated.Return valueParameterReturn valuex>0Positivex=0zero0>x> -1Negativex= -1-infinityx<-1Not a Number(nan)Example 1Let's see a simple example when the value of x is greater than zero.#include <iostream>
#include<math.h>
using namespace std;
int main()
{
     int x=10;
     std::cout << "Value of x is : " <<x <<std::endl;
     cout<<"log1p(x) = "<<log1p(x);
     return 0;
}Output:Value of x is : 10
log1p(x) = 2.3979In this example, log1p() function computes the logarithm value when x is greater than zero.Example 2Let's see a simple example when the value of x is zero#include <iostream>
#include<math.h>
using namespace std;
int main()
{
     int x=0;
     std::cout << "Value of x is : " <<x <<std::endl;
     cout<<"log1p(x) = "<<log1p(x);
     return 0;
}Output:Value of x is : 0
log1p(x) = 0In this example, log1p() function computes the logarithm value when the value of x is zero.Example 3Let's see a simple example when the value of x is less than zero.#include <iostream>
#include<math.h>
using namespace std;
int main()
{
     float x= -0.5;
     std::cout << "Value of x is : " <<x <<std::endl;
     cout<<"log1p(x) = "<<log1p(x);
     return 0;
}Output:Value of x is : -0.5
log1p(x) = -0.693147In this example, log1p() function computes the logarithm value when the value of x is less than zero.Example 4Let's see the simple example when the value of x is -1.#include <iostream>
#include<math.h>
using namespace std;
int main()
{
     int x= -1;
     std::cout << "Value of x is : " <<x <<std::endl;
     cout<<"log1p(x) = "<<log1p(x);
     return 0;
}Output:Value of x is : -1
log1p(x) = -infIn this example, log1p() function computes the logarithm value when the value of x is -1.Example 5Let's see the simple example when the value of x is less than -1.#include <iostream>
#include<math.h>
using namespace std;
int main()
{
    int x= -3;
    std::cout << "Value of x is : " <<x <<std::endl;
    cout<<"log1p(x) = "<<log1p(x);
    return 0;
}Output:Value of x is : -3
log1p(x) = -nanIn this example, log1p() function computes the logarithm value when the value of x is less than -1.Next TopicC++ Math Functions? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.