C++ Stack size() Function - javatpoint?HomeCC++C#JavaPHPHTMLCSSJavaScriptjQueryXMLJSONAjaxNode.jsSQLQuizProjectsInterview QCommentForumTrainingC++ StackC++ Stack emplace() empty() pop() push() size() top()next ? ? prevC++ Stack size() FunctionC++ Stack size() function returns the number of stack elements. The number of stack elements is referred to the size of the stack. The size of the stack element is very important information as based on it we can deduce many other things such as the space required, etc.Syntaxsize_type size() constParametersNo parameters are passed to the function; it simply gives the size of the stack under reference. Since the function is used to get an idea about the stack size there is no purpose of the argument in the program.Return valueThe number of elements in the stack is returned, which is a measure of the size of the stack. Hence the function has an integer return type as size is an int value.Example 1// A simple C++ to demonstrate the use of the size() function in the stack container.#include <iostream>
#include <stack>
using namespace std;
int main()
{
	std::stack<int> newstack;
	std::cout << "0. size: "<< newstack.size();
	for(int j=0; j<5; j++)
	newstack.push(j);
	cout<<"\n";
	std::cout<<"1. size: " << newstack.size();
	newstack.pop();
	cout<<"\n";
	std::cout<<"2. size: "<< newstack.size();
	return 0;
}Output:0. size: 0
1. size: 5
2. size: 4Example 2// A simple C++ to demonstrate the use of the size() function in the stack container.#include <iostream>
#include <stack>
using namespace std;
int main()
{
	std::stack<int> newstack;
	newstack.push(23);
	newstack.push(46);
	newstack.push(69);
	cout << newstack.size();
	return 0;
}Output:3Example 3// A simple C++ to demonstrate the use of the size() function in the stack container.#include <iostream>
#include <stack>
int main()
{
	std::stack<int> a,b;
	a.push(5); a.push(8); a.push(50);
	b.push(132); b.push(45);
	std::cout<<"Size of a: "<<a.size();
	std::cout<<"\n Size of b:" <<b.size();
	return 0;
}Output:Size of a: 3
Size of b: 2ComplexityThe complexity of the function is constant, the function only returns the size of the stack, which is measured by the number of elements.Data racesThe function accesses the container. The whole stack container is accessed by this function for the value of stack size. As size is measured by the total number of elements present in the stack so whole container is atleast once accessed.Exception SafetyGuarantee as equivalent to the operations that are performed on the underlying container object is provided.Next TopicC++ Stack? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.