AWS | IAM Roles - Javatpoint?HomeAWSComputer NetworkIoTDSJavaHTMLCSSAptitudeSeleniumKotlinJavaScriptjQueryQuizProjectsInterview QCommentForumTrainingAWS TutorialAWS Tutorial History of AWS AWS Features Global Infrastructure AWS Free TierAWS IAMAWS IAM AWS SAML IAM Identities IAM Roles IAM Roles Use Cases Creating IAM RolesStorage ServicesAWS S3 AWS S3 Concepts Creating S3 Bucket AWS Storage Classes AWS Versioning Cross Region Replication Lifecycle Management CloudFront CDN Creating CloudFront CDN Storage Gateway AWS Snowball S3 Transfer AccelerationEC2 - Backbone of AWSAWS EC2 AWS EBS Creating an EC2 instance EBS Volume Security Group AWS AMI Creating an AMI AWS Load Balancing Creating Load Balancer AWS Lambda Creating a Lambda CloudWatch EC2 AWS Bash ScriptAWS Route53What is DNSDatabase ServicesRelational Database Non Relational Database AWS Elasticache Creating an RDS Instance AWS DynamoDB AWS Aurora AWS RedshiftApplication ServicesAWS SQS AWS SWF AWS SNS Elastic Transcoder API Gateway AWS KinesisAWS VPCAWS VPC Creating your own custom VPC Direct Connect NAT Gateways AWS Bastion Host AWS VPC Endpoint AWS VPC FlowLogs AWS NACL NACL vs Security Group AWS Data PipelineInterview QuestionsAWS Interview Questionsnext ? ? prevWhat is a Role?A role is a set of permissions that grant access to actions and resources in AWS. These permissions are attached to the role, not to an IAM User or a group.An IAM User can use a role in the same AWS account or a different account.An IAM User is similar to an IAM User; role is also an AWS identity with permission policies that determine what the identity can and cannot do in AWS.A role is not uniquely associated with a single person; it can be used by anyone who needs it.A role does not have long term security credential, i.e., password or security key. Instead, if the user uses a role, temporarily security credentials are created and provided to the user.You can use the roles to delegate access to users, applications or services that generally do not have access to your AWS resources.Situations in which "IAM Roles" can be used:Sometimes you want to grant the users to access the AWS resources in your AWS account.Sometimes you want to grant the users to access the AWS resources in another AWS account.It also allows the mobile app to access the AWS resources, but not want to store the keys in the app.It can be used to grant access to the AWS resources which have identities outside of AWS.It can also be used to grant access to the AWS resources to the third party so that they can perform an audit on AWS resources.Following are the important terms associated with the "IAM Roles":Delegation: Delegation is a process of granting the permissions to the user to allow the access to the AWS resources that you control. Delegation sets up the trust between a trusted account (an account that owns the resource) and a trusting account (an account that contains the users that need to access the resources).The trusting and trusted account can be of three types:Same accountTwo different accounts under the same organization controlTwo different accounts owned by different organizations.To delegate permission to access the resources, an IAM role is to be created in the trusting account that has the two policies attached.Permission Policy: It grants the user with a role the needed permissions to carry out the intended tasks.Trust Policy: It specifies which trusted account members can use the role.Federation: Federation is a process of creating the trust relationship between the external service provider and AWS. For example, Facebook allows the user to login to different websites by using their facebook accounts.Trust policy: A document was written in JSON format to define who is allowed to use the role. This document is written based on the rules of the IAM Policy Language.Permissions policy: A document written in JSON format to define the actions and resources that the role can use. This document is based on the rules of the IAM Policy Language.Permissions boundary: It is an advanced feature of AWS in which you can limit the maximum permissions that the role can have. The permission boundaries can be applied to IAM User or IAM role but cannot be applied to the service-linked role.Principal: A principal can be AWS root account user, an IAM User, or a role. The permissions that can be granted in one of the two ways:Attach a permission policy to a role.The services that support resource-based policies, you can identify the principal in the principal element of policy attached to the resource.Cross-account access: Roles vs Resource-Based Policies: It allows you to grant access to the resources in one account to the trusted principal in another account is known as cross-account access. Some services allow you to attach the policy directly, known as Resource-Based policy. The services that support Resource-Based Policy are Amazon S3 buckets, Amazon SNS, Amazon SQS Queues.Next TopicIAM Roles Use Cases? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.