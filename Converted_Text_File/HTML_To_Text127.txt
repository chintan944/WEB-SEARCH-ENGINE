All-pairs Testing Technique in Black Box Testing - javatpoint?HomeSoftware TestingCompilerJavaCOAComputer NetworkHTMLCSSSeleniumServletJSPjQueryQuizProjectsInterview QCommentForumTrainingSoftware TestingTutorial Software Development Life Cycle Spiral Model Waterfall model Software Testing Life CycleTypes of TestingManual Testing Automation TestingTypes of ManualWhite Box Testing Black Box Testing Grey Box TestingWhite Box TechniquesData Flow Testing Control Flow Testing Branch Coverage Testing Statement Coverage Testing Decision Coverage TestingBlack Box TechniquesDecision Table All-pair Testing Cause-Effect Testing State Transition Use CaseTypes of Black BoxFunctional Testing Non-Functional TestingTypes of FunctionalUnit Testing Integration Testing System TestingTypes of Non-functionalPerformance Testing Usability Testing Compatibility TestingTest case developmentTesting Documentation Test Scenario Test CaseTesting TechniquesError Guessing Equivalence Portioning Boundary Value analysisTest ManagementTest Plan Test case review process Requirement Traceability MatrixDefect TrackingBug in Software Testing Bug Life cycle Severity & Priority Test EnvironmentOther types of TestingRegression Testing Smoke Testing Sanity Testing Exploratory Testing Visual Testing Acceptance Testing Alpha Testing Beta Testing Adhoc TestingSoftware Testing ToolsSoftware testing tools Test management tools Defect/Bug tracking tools Automation testing tools Performance testing tools Cross-browser testing tools Integration testing tools Unit testing tools Mobile Testing Tools GUI testing tools Security testing toolsDifferencesAutomation Testing vs Manual Testing Load Testing vs Stress Testing Smoke Testing vs Sanity Testing System Testing vs Acceptance Testing Quality Assurance vs Quality Control Static Testing vs Dynamic Testing Verification vs Validation Testing Alpha Testing vs Beta Testing Black Box vs. White Box vs. Grey Box TestingInterview QuestionsSoftware Testing i/Qnext ? ? prevAll-pairs TestingAll-pairs testing technique is also known as pairwise testing. It is used to test all the possible discrete combinations of values. This combinational method is used for testing the application that uses checkbox input, radio button input (radio button is used when you have to select only one option for example when you select gender male or female, you can select only one option), list box, text box, etc.Suppose, you have a function of a software application for testing, in which there are 10 fields to input the data, so the total number of discrete combinations is 10 ^ 10 (100 billion), but testing of all combinations is complicated because it will take a lot of time.So, let's understand the testing process with an example:Assume that there is a function with a list box that contains 10 elements, text box that can accept 1 to 100 characters, radio button, checkbox and OK button.The input values are given below that can be accepted by the fields of the given function.Check Box - Checked or UncheckedList Box - 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,Radio Button - On or OffText Box - Number of alphabets between 1 to 100.OK - Does not accept any value, only redirects to the next page.Calculation of all the possible combinations:Check Box = 2   
List Box = 10   
Radio Button = 2   
Text Box = 100   
Total number of test cases = 2*10*2*100   
                           = 4000  The total number of test cases, including negative test cases, is 4000.Testing of 4000 positive and negative test cases, is a very long and time-consuming process. Therefore, the task of the testing team is to reduce the number of test cases, to do this, the testing team considers the list box values in such a way that the first value is 0, and the other value can be any numeric number, neither positive nor negative. Ten values are now converted into 2 values.Values of checkbox and radio button cannot be reduced because each has a combination of only 2 values. At last, the value of the text box is divided into three input categories valid integer, invalid integer, and alpha-special character.Now, we have only 24 test cases, including negative test cases.2*2*2*3 = 24Now, the task is to make combinations for all pair technique, into which each column should have an equal number of values, and the total value should be equal to 24.In order to make text box column, put the most common input on the first place that is a valid integer, on the second place put the second most common input that is an invalid integer, and at the last place put the least common input that is an Alpha Special Character.Then start filling the table, the first column is a text box with three values, the next column is a list box that has 2 values, the third column is a checkbox that has 2 values, and the last one is a radio button that also has 2 values.Text boxList BoxCheck BoxRadio ButtonValid Integer0CheckONInvalid IntegerOtherUncheckOFFValid Integer0CheckONInvalid IntegerOtherUncheckOFFAlphaSpecialCharacter0CheckONAlphaSpecialCharacterOtherUncheckOFFIn the table, we can see that the conventional software method results in 24 test cases instead of 4000 cases, and the pairwise testing method only in just 6 pair test cases.Next TopicCause-Effect? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.