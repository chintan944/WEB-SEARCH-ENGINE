Bug in Software Testing - javatpoint?HomeSoftware TestingCompilerJavaCOAComputer NetworkHTMLCSSSeleniumServletJSPjQueryQuizProjectsInterview QCommentForumTrainingSoftware TestingTutorial Software Development Life Cycle Spiral Model Waterfall model Software Testing Life CycleTypes of TestingManual Testing Automation TestingTypes of ManualWhite Box Testing Black Box Testing Grey Box TestingWhite Box TechniquesData Flow Testing Control Flow Testing Branch Coverage Testing Statement Coverage Testing Decision Coverage TestingBlack Box TechniquesDecision Table All-pair Testing Cause-Effect Testing State Transition Use CaseTypes of Black BoxFunctional Testing Non-Functional TestingTypes of FunctionalUnit Testing Integration Testing System TestingTypes of Non-functionalPerformance Testing Usability Testing Compatibility TestingTest case developmentTesting Documentation Test Scenario Test CaseTesting TechniquesError Guessing Equivalence Portioning Boundary Value analysisTest ManagementTest Plan Test case review process Requirement Traceability MatrixDefect TrackingBug in Software Testing Bug Life cycle Severity & Priority Test EnvironmentOther types of TestingRegression Testing Smoke Testing Sanity Testing Exploratory Testing Visual Testing Acceptance Testing Alpha Testing Beta Testing Adhoc TestingSoftware Testing ToolsSoftware testing tools Test management tools Defect/Bug tracking tools Automation testing tools Performance testing tools Cross-browser testing tools Integration testing tools Unit testing tools Mobile Testing Tools GUI testing tools Security testing toolsDifferencesAutomation Testing vs Manual Testing Load Testing vs Stress Testing Smoke Testing vs Sanity Testing System Testing vs Acceptance Testing Quality Assurance vs Quality Control Static Testing vs Dynamic Testing Verification vs Validation Testing Alpha Testing vs Beta Testing Black Box vs. White Box vs. Grey Box TestingInterview QuestionsSoftware Testing i/Qnext ? ? prevBug in Software TestingIn this chapter, we will learn about defect/bug in software testing and why it occurs, basic terminology of a defect, and bug tracking tool.What is a bug in software testing?The Bug is the informal name of defects, which means that software or application is not working as per the requirement.In software testing, a software bug can also be issue, error, fault, or failure. The bug occurred when developers made any mistake or error while developing the product.While testing the application or executing the test cases, the test engineer may not get the expected result as per the requirement. And the bug had various names in different companies such as error, issues, problem, fault, and mistake, etc.Basic terminology of defectLet see the different terminology of defect:DefectBugErrorIssueMistakevFailurevTermsDescriptionRaised byDefect When the application is not working as per the requirement.Test EngineerBugInformal name of defectTest EngineerErrorProblem in code leads to the errors.Developer, Automation Test EngineerIssueWhen the application is not meeting the business requirement.CustomerMistakeProblem in the document is known as a mistake.--FailureLots of defect leads to failure of the software.--Why defect/bug occur?In software testing, the bug can occur for the following reasons:Wrong codingMissing codingExtra codingWrong codingWrong coding means improper implementation.For example: Suppose if we take the Gmail application where we click on the "Inbox" link, and it navigates to the "Draft" page, this is happening because of the wrong coding which is done by the developer, that's why it is a bug.Missing codingHere, missing coding means that the developer may not have developed the code only for that particular feature.For example: if we take the above example and open the inbox link, we see that it is not there only, which means the feature is not developed only.Extra codingHere, extra coding means that the developers develop the extra features, which are not required according to the client's requirements.For example:Suppose we have one application form wherein the Name field, the First name, and Last name textbox are needed to develop according to the client's requirement.But, the developers also develop the "Middle name" textbox, which is not needed according to the client's requirements as we can see in the below image:If we develop an extra feature that is not needed in the requirement, it leads to unnecessary extra effort. And it might also happen that adding up the extra feature affects the other elements too.Bug tracking toolWe have various types of bug tracking tools available in software testing that helps us to track the bug, which is related to the software or the application.Some of the most commonly used bug tracking tools are as follows:JiraBugzillaRedmineMantisBacklogJiraJira is one of the most important bug tracking tools. Jira is an open-source tool that is used for bug tracking, project management, and issue tracking in manual testing.Jira includes different features like reporting, recording, and workflow. In Jira, we can track all kinds of bugs and issues, which are related to the software and generated by the test engineer.To get the complete details about Jira tool, refer to the below link:https://www.javatpoint.com/jira-tutorialBugzillaBugzilla is another important bug tracking tool, which is most widely used by many organizations to track the bugs.Bugzilla is an open-source tool, which is used to help the customer, and the client to maintain the track of the bugs.It is also used as a test management tool because, in this, we can easily link other test case management tools such as ALM, quality Centre, etc.Bugzilla supports various operating systems such as Windows, Linux, and Mac.Bugzilla has some features which help us to report the bug easily:A bug can be list in multiple formatsEmail notification controlled by user preferences.Advanced searching capabilitiesExcellent securityTime trackingRedmineIt is an open-source tool which is used to track the issues and web-based project management tool. Redmine tool is written in Ruby programing language and also compatible with multiple databases like MySQL, Microsoft SQL, and SQLite.While using the Redmine tool, users can also manage the various project and related subprojects.Some of the common characteristics of Redmine tools are as follows:Flexible role-based access controlTime tracking functionalityA flexible issue tracking systemFeeds and email notificationMultiple languages support (Albanian, Arabic, Dutch, English, Danish and so on)MantisBTMantisBT stands for Mantis Bug Tracker. It is a web-based bug tracking system, and it is also an open-source tool.MantisBT is used to follow the software defects. It is executed in the PHP programing language.Some of the common features of MantisBT are as follows:Full-text searchAudit trails of changes made to issuesRevision control system integrationRevision control of text fields and notesNotificationsPlug-insGraphing of relationships between issuesBacklogThe backlog is widely used to manage the IT projects and track the bugs. It is mainly built for the development team for reporting the bugs with the complete details of the issues, comments. Updates and change of status. It is a project management software.Features of backlog tool are as follows:Gantt and burn down chartsIt supports Git and SVN repositoriesIP access controlSupport Native iOS and Android appsNext TopicRegression Testing? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.