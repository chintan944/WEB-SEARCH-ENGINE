CodeIgniter Preventing, Enabling from CSRF - javatpoint?HomeCJavaPHPMySQLWordPressCodeIgniterHTMLCSSBootstrapJavaScriptjQueryjQuery UIXMLAjaxSQLQuizProjectsInterview QCommentForumTrainingCodeIgniter TutorialCodeIgniter Tutorial What is CodeIgniter CodeIgniter License CodeIgniter versions CodeIgniter Feature CodeIgniter Installation CodeIgniter File System CodeIgniter Architecture CodeIgniter MVC Models Views ControllerCodeIgniter ExampleCodeIgniter First Example CodeIgniter URL CodeIgniter Create a site CodeIgniter Methods CodeIgniter Helper CodeIgniter Library CodeIgniter URL Routing CodeIgniter Hooks CI Passing Parameters CodeIgniter DriverCodeIgniter DatabaseCodeIgniter Database CI Database Insert CI Database select CI Login Form CI Database Login FormCodeIgniter SecurityCI Security Class CI CSRFCodeIgniter InterviewCI Interview Questionsnext ? ? prevPreventing, Enabling from CSRFIn this tutorial we'll learn to protect CodeIgniter application from the cross-site request forgery attack. It is one of the most common vulnerabilities in web application. CSRF protection is quite easy in CodeIgniter due to its built-in feature.What is CSRF attackA CSRF attack forces a logged-on victim's browser to send a forged HTTP request, including victim's session cookie and other authentication information, to a web application.For example, suppose you have a site with a form. An attacker could create a bogus form on his site. This form could contain hidden inputs and malicious data. This form is not actually sent to the attacker's site, in fact it comes to your site. Thinking that the form is genuine, your site will process it.Now just suppose that the attacker's form point towards the deletion form in your site. If a user is logged in and redirected to the attacker's site and when perform search, his account will be deleted without knowing him. That is the CSRF attack.Token MethodTo protect from CSRF we need to connect both the HTTP requests, form request and form submission. There are several ways to do this, but in CodeIgniter hidden field is used which is called CSRF token. The CSRF token is a random value that changes with every HTTP request sent.When CSRF token is inserted in the website form, it also gets saved in the user's session. When the form is submitted, the website matches both the token, the submitted one and one saved in the session. If they match, request is made legitimate. The token value changes each time the page is loaded, which makes it tough for the hackers to guess the current token.Enabling CSRF ProtectionTo enable CSRF make the following statement TRUE from FALSE in application/config/config.php file.$config['csrf_protection'] = TRUE;Token GenerationWith each request a new CSRF token is generated. When object is created, name and value of the token are set.$this->csrf_cookie_name = $this->csrf_token_name;
$this->_csrf_set_hash();The function for it is,function _csrf_set_hash()
{
  	  if ($this->csrf_hash == '')
    	{
if ( isset($_COOKIE[$this->csrf_cookie_name] ) AND
         	 $_COOKIE[$this->csrf_cookie_name] != '' )
     	   {
           	 $this->csrf_hash = $_COOKIE[$this->csrf_cookie_name];
      	  } else {
         	   $this->csrf_hash = md5(uniqid(rand(), TRUE));
       	 }
 	   }
    return $this->csrf_hash;
}First, function checks the cookie's existence. If it exists, its current value is used because when security class is instantiated multiple times, each request would overwrite the previous one.Function also creates a globally available hash value and save it for further processing. The token's value is generated. Now it has to be inserted into every form of the website with the help of function form_open().The method csrf_verify() is called each time a form is sent. This method does two things. If no POST data is received, the CSRF cookie is set. And if POST data is received, it checks the submitted value corresponds to the CSRF token value in session. In the second case, CSRF token value is discarded and generated again for the next request. This request is legitimate and whole process starts again.Next TopicCodeIgniter Interview Question? prev next ?Help Others, Please ShareLearn Latest TutorialsOpenpyxlTallyGodotSpring BootGradleUMLANNES6FlutterSelenium PyFirebaseCobolPreparationAptitudeReasoningVerbal A.InterviewCompanyTrending TechnologiesAIAWSSeleniumCloudHadoopReactJSD. ScienceAngular 7BlockchainGitMLDevOpsB.Tech / MCADBMSDSDAAOSC. NetworkCompiler D.COAD. Math.E. HackingC. GraphicsSoftware E.Web Tech.Cyber Sec.AutomataCC++Java.NetPythonProgramsControl S.Data MiningJavatpoint ServicesJavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services.Website DesigningWebsite DevelopmentJava DevelopmentPHP DevelopmentWordPressGraphic DesigningLogoDigital MarketingOn Page and Off Page SEOPPCContent DevelopmentCorporate TrainingClassroom and Online TrainingData EntryTraining For College CampusJavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com.Duration: 1 week to 2 weekLike/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring TutorialOur WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.comOur ServicesWebsite DevelopmentAndroid DevelopmentWebsite DesigningDigital MarketingSummer TrainingIndustrial TrainingCollege Campus TrainingContactAddress: G-13, 2nd Floor, Sec-3Noida, UP, 201301, IndiaContact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemapAbout Me© Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.